import { initSubjectInGlobal } from '@slardar/sdk-template';
import { loadSubject, unloadSubject, hiddenSubject } from '../../collector/page';
import { getFMP } from '../../monitors/performance-new/fmp';
import { getPaint, FP_ENTRY_NAME } from '../../monitors/performance-new/paint';
import { getPluginConfig, reportOnInitCommonParams } from './utils';
export var FMP_MONITOR_PLUGIN_NAME = 'fmp';
var defaultConfig = {
    renderType: 'CSR',
};
export function FMPMonitorPlugin(client) {
    client.on('init', function () {
        var config = getPluginConfig(client, FMP_MONITOR_PLUGIN_NAME, defaultConfig);
        if (!config) {
            return;
        }
        var tearDownGroup = [];
        var loadObserver = initSubjectInGlobal(client, loadSubject);
        if (config.renderType === 'SSR') {
            var hiddenObserver = initSubjectInGlobal(client, hiddenSubject);
            var unloadObserver = initSubjectInGlobal(client, unloadSubject);
            // @ts-expect-error
            getPaint(FP_ENTRY_NAME, FMP_MONITOR_PLUGIN_NAME, reportOnInitCommonParams(client), tearDownGroup, [
                hiddenObserver,
                unloadObserver,
            ]);
        }
        else {
            getFMP(reportOnInitCommonParams(client), tearDownGroup, [loadObserver]);
        }
        client.on('beforeDestroy', function () {
            tearDownGroup.forEach(function (e) { return e(); });
        });
    });
}
//# sourceMappingURL=fmp.js.map