import { initSubjectInGlobal } from '@slardar/sdk-template';
import { loadSubject } from '../../collector/page';
import { resourceSubject } from '../../collector/pref';
import { resourceGetterWithContext } from '../../monitors/resource';
import { getPluginConfig } from './utils';
export var RESOURCE_MONITOR_PLUGIN_NAME = 'resource';
var defaultConfig = {
    ignoreUrls: [],
    slowSessionThreshold: 4000,
};
export function ResourceMonitorPlugin(client) {
    client.on('init', function () {
        var config = getPluginConfig(client, RESOURCE_MONITOR_PLUGIN_NAME, defaultConfig);
        if (!config) {
            return;
        }
        var tearDownGroup = [];
        resourceGetterWithContext(client.report.bind(client), tearDownGroup, [initSubjectInGlobal(client, loadSubject), function () { return initSubjectInGlobal(client, resourceSubject); }], config);
        client.on('beforeDestroy', function () {
            tearDownGroup.forEach(function (e) { return e(); });
        });
    });
}
//# sourceMappingURL=resource.js.map