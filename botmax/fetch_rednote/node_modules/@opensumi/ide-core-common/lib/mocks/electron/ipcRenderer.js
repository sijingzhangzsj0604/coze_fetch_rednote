"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockedElectronIpcRenderer = void 0;
const events_1 = require("events");
class MockedElectronIpcRenderer extends events_1.EventEmitter {
    constructor() {
        super(...arguments);
        this.targetHost = new events_1.EventEmitter();
    }
    invoke(channel, ...args) {
        throw new Error('Method not implemented.');
    }
    eventNames() {
        return super.eventNames().map((s) => s.toString());
    }
    send(channel, ...args) {
        this.targetHost.emit('send', { channel }, args);
    }
    sendSync(channel, ...args) {
        this.targetHost.emit('sendSync', { channel }, args);
    }
    sendTo(webContentsId, channel, ...args) {
        this.targetHost.emit('sendTo', { webContentsId, channel }, args);
    }
    sendToHost(channel, ...args) {
        this.targetHost.emit('sendToHost', channel, ...args);
    }
    postMessage(channel, message, transfer) { }
}
exports.MockedElectronIpcRenderer = MockedElectronIpcRenderer;
//# sourceMappingURL=ipcRenderer.js.map