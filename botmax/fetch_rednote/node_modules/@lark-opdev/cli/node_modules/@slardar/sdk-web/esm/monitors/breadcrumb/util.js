import { __assign, __read, __spreadArray } from "tslib";
/* eslint-disable @typescript-eslint/prefer-nullish-coalescing */
import { id } from '@slardar/sdk-template';
import { applyDomAndKeyPress, domBreadcrumb, triggerHandlers, now } from '../../utils';
export { applyDomAndKeyPress, domBreadcrumb, triggerHandlers };
export var applyBreadcrumb = function (maxBreadcrumbs, onAddBreadcrumb, onMaxBreadcrumbs) {
    if (maxBreadcrumbs === void 0) { maxBreadcrumbs = 20; }
    if (onAddBreadcrumb === void 0) { onAddBreadcrumb = id; }
    if (onMaxBreadcrumbs === void 0) { onMaxBreadcrumbs = function (bs, max) { return bs.slice(-max); }; }
    var breadcrumbs = [];
    var addBreadcrumb = function (breadcrumb) {
        var processed = onAddBreadcrumb(breadcrumb);
        if (processed) {
            var mergedBreadcrumb = __assign(__assign({}, breadcrumb), { timestamp: breadcrumb.timestamp || now() });
            breadcrumbs =
                maxBreadcrumbs >= 0 && breadcrumbs.length + 1 > maxBreadcrumbs
                    ? onMaxBreadcrumbs(__spreadArray(__spreadArray([], __read(breadcrumbs), false), [mergedBreadcrumb], false), maxBreadcrumbs)
                    : __spreadArray(__spreadArray([], __read(breadcrumbs), false), [mergedBreadcrumb], false);
        }
    };
    return [function () { return breadcrumbs; }, addBreadcrumb];
};
//# sourceMappingURL=util.js.map