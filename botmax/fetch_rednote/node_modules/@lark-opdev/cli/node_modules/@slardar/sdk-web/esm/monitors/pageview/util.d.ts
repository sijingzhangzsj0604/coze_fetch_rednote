import { WebReportEvent } from '../../types';
import { PageviewSourceType } from './type';
export declare const getDefaultExtractor: (routeMode: 'hash' | 'history' | 'manual') => (url: string) => string;
export declare const applyOnPidChange: (cb: (source: PageviewSourceType, pid: string) => void, initPid: string, firstOriginPid: string, onPidUpdate?: ((pid: string) => void) | undefined) => [(source: PageviewSourceType, newPid: string, customPid?: string | undefined) => void, () => void];
export declare const applyOnUrlChange: (cb: (source: PageviewSourceType, url: string) => void, initUrl: string) => ((source: PageviewSourceType, newUrl: string) => void)[];
export declare const wrapPageview: (source: PageviewSourceType, pid: string) => WebReportEvent;
export declare const applyReportPageview: (report: (ev: WebReportEvent) => void) => (source: PageviewSourceType, pid: string) => void;
export declare const isManualMode: (routeMode: string) => boolean;
