export declare enum REPORT_NAME {
    ACTIVE_EXTENSION = "activateExtension",
    RUNTIME_ERROR_EXTENSION = "runtimeErrorExtension",
    LOAD_EXTENSION_MAIN = "loadExtensionMain",
    PROVIDE_COMPLETION_ITEMS = "provideCompletionItems",
    RESOLVE_COMPLETION_ITEM = "resolveCompletionItem",
    PROVIDE_DOCUMENT_FORMATTING_EDITS = "provideDocumentFormattingEdits",
    PROVIDE_DOCUMENT_RANGE_FORMATTING_EDITS = "provideDocumentRangeFormattingEdits",
    EDITOR_REACTIVE = "editorReactive",
    CHANNEL_RECONNECT = "channelReconnect",
    MEASURE = "measure",
    FORMAT_ON_SAVE_TIMEOUT_ERROR = "formatOnSaveTimeoutError",
    FORMAT_ON_SAVE = "formatOnSave",
    NOT_FOUND_COMMAND = "notFoundCommand",
    INSTALL_EXTENSION_ERROR = "installExtensionError",
    EXTENSION_CRASH = "extensionCrash",
    EXTENSION_NOT_EXIST = "extensionNotExist",
    THEME_LOAD = "themeLoad",
    PROVIDE_HOVER = "provideHover",
    PROVIDE_DEFINITION = "provideDefinition",
    PROVIDE_TYPE_DEFINITION = "provideTypeDefinition",
    PROVIDE_FOLDING_RANGES = "provideFoldingRanges",
    PROVIDE_DOCUMENT_COLORS = "provideDocumentColors",
    PROVIDE_COLOR_PRESENTATIONS = "provideColorPresentations",
    PROVIDE_DOCUMENT_HIGHLIGHTS = "provideDocumentHighlights",
    PROVIDE_LINKS = "provideLinks",
    PROVIDE_REFERENCES = "provideReferences",
    PROVIDE_DOCUMENT_SYMBOLS = "provideDocumentSymbols",
    PROVIDE_IMPLEMENTATION = "provideImplementation",
    PROVIDE_CODE_ACTIONS = "provideCodeActions",
    PROVIDE_RENAME_EDITS = "provideRenameEdits",
    PROVIDE_SIGNATURE_HELP = "provideSignatureHelp",
    PROVIDE_CODE_LENSES = "provideCodeLenses",
    RESOLVE_CODE_LENS = "resolveCodeLens",
    PROVIDE_ON_TYPE_FORMATTING_EDITS = "provideOnTypeFormattingEdits",
    PROVIDE_SELECTION_RANGES = "provideSelectionRanges",
    TERMINAL_MEASURE = "terminalMeasure",
    SEARCH_MEASURE = "searchMeasure",
    QUICK_OPEN_MEASURE = "quickOpenMeasure"
}
export declare enum REPORT_HOST {
    BROWSER = "browser",
    NODE = "node",
    WORKER = "worker",
    EXTENSION = "extension"
}
export declare enum REPORT_TYPE {
    PERFORMANCE = "performance",
    POINT = "point"
}
export declare const ReporterMetadata: unique symbol;
export interface ReporterMetadata {
    extensionId?: string;
    extensionVersion?: string;
    host?: REPORT_HOST;
}
export interface PointData {
    metadata?: ReporterMetadata;
    extra?: any;
    msg?: string;
}
export interface PerformanceData extends PointData {
    duration: number;
}
export declare const IReporterService: unique symbol;
export interface IReporterTimer {
    timeEnd(msg?: string, extra?: any): number;
}
export interface IReporterService {
    time(name: REPORT_NAME | string): IReporterTimer;
    point(name: REPORT_NAME | string, msg?: string, extra?: any): void;
}
export declare const IReporter: unique symbol;
export interface IReporter {
    performance(name: string, data: PerformanceData): void;
    point(name: string, data: PointData): void;
}
export interface ReporterProcessMessage {
    reportType: REPORT_TYPE;
    name: string;
    data: PerformanceData | PointData;
}
//# sourceMappingURL=reporter.d.ts.map