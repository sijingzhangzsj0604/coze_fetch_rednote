"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizedIpcHandlerPathAsync = exports.normalizedIpcHandlerPath = void 0;
const os_1 = require("os");
const path_1 = require("path");
const fs_extra_1 = require("fs-extra");
const ide_utils_1 = require("@opensumi/ide-utils");
function normalizedIpcHandlerPath(name, uuidSuffix = false, ipcPath = (0, os_1.tmpdir)()) {
    let handler;
    if (!ide_utils_1.isWindows) {
        handler = (0, path_1.join)(ipcPath, 'sumi-ipc', `sumi-ipc-${name}${uuidSuffix ? (0, ide_utils_1.uuid)() : ''}.sock`);
        (0, fs_extra_1.ensureDirSync)((0, path_1.dirname)(handler));
    }
    else {
        handler = `\\\\.\\pipe\\sumi-ipc-${name}${uuidSuffix ? (0, ide_utils_1.uuid)() : ''}`;
    }
    return handler;
}
exports.normalizedIpcHandlerPath = normalizedIpcHandlerPath;
async function normalizedIpcHandlerPathAsync(name, uuidSuffix = false, ipcPath = (0, os_1.tmpdir)()) {
    let handler;
    if (!ide_utils_1.isWindows) {
        handler = (0, path_1.join)(ipcPath, 'sumi-ipc', `sumi-ipc-${name}${uuidSuffix ? (0, ide_utils_1.uuid)() : ''}.sock`);
        await (0, fs_extra_1.ensureDir)((0, path_1.dirname)(handler));
    }
    else {
        handler = `\\\\.\\pipe\\sumi-ipc-${name}${uuidSuffix ? (0, ide_utils_1.uuid)() : ''}`;
    }
    return handler;
}
exports.normalizedIpcHandlerPathAsync = normalizedIpcHandlerPathAsync;
//# sourceMappingURL=ipc.js.map