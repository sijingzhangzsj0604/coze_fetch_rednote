import { __read } from "tslib";
/* eslint-disable @typescript-eslint/prefer-optional-chain */
import { noop } from '@slardar/sdk-template';
import { getDefaultPerformanceObserver, applyPerformanceObserver } from '../../../utils';
var Longtask = 'longtask';
export var LongtaskMonitor = function (PerformanceObserver) {
    if (PerformanceObserver === void 0) { PerformanceObserver = getDefaultPerformanceObserver(); }
    return function (props, cb) {
        var precollect = props.precollect;
        var _a = (precollect || {}).entries, entries = _a === void 0 ? [] : _a;
        var precollectLongtasks = entries.filter(function (v) { return v.entryType === Longtask; });
        var invokeCb = function (longtasks) {
            cb &&
                cb({
                    longtasks: longtasks,
                    type: 'pref',
                });
        };
        precollectLongtasks.length && invokeCb(precollectLongtasks);
        if (!PerformanceObserver) {
            return [noop];
        }
        var _b = __read(applyPerformanceObserver(PerformanceObserver, function (longtask) { return invokeCb([longtask]); }, false), 2), observe = _b[0], disconnect = _b[1];
        observe(Longtask);
        return [disconnect];
    };
};
//# sourceMappingURL=index.js.map