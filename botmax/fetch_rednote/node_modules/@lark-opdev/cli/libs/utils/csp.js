"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toWildcardDomain = void 0;
class CSP {
    constructor() {
        this.config = {
            'default-src': [],
            'iframe-src': [],
        };
    }
    add(key, value) {
        if (typeof value === 'object') {
            this.config[key].push(...value);
        }
        else {
            this.config[key].push(value);
        }
    }
    get(key) {
        return this.config[key];
    }
    getStr() {
        return Object.entries(this.config).reduce((prev, cur) => {
            const [key, values] = cur;
            if (values.length) {
                prev += `${key}`;
                values.forEach((value) => {
                    prev += ` ${value}`;
                });
                prev += ';';
            }
            return prev;
        }, '');
    }
}
exports.default = CSP;
function _toWildcardDomain(domain) {
    const url = new URL(domain);
    const host = url.host;
    const wildcardHost = host.startsWith('*.') ? host : `*.${host}`;
    url.host = wildcardHost;
    const wildcardUrl = url.toString();
    if (!domain.endsWith('/') && wildcardUrl.endsWith('/')) {
        return wildcardUrl.slice(0, -1);
    }
    return wildcardUrl;
}
function toWildcardDomain(domain) {
    var _a;
    try {
        if (domain.startsWith('http://') || domain.startsWith('https://')) {
            return _toWildcardDomain(domain);
        }
        const wildcardDomain = _toWildcardDomain(`https://${domain}`);
        return (_a = wildcardDomain === null || wildcardDomain === void 0 ? void 0 : wildcardDomain.slice(8)) !== null && _a !== void 0 ? _a : wildcardDomain;
    }
    catch (e) {
        return undefined;
    }
}
exports.toWildcardDomain = toWildcardDomain;
