import test from 'ava';
import { getCookieId, getValueFromCookieName, setCookie } from '../cookie';
var browserEnv = require('browser-env');
test('getValueFromCookieName', function (t) {
    var cookie = 'name=toutiao;from=china';
    t.is(getValueFromCookieName(cookie, 'name'), 'toutiao');
    t.is(getValueFromCookieName(cookie, 'age'), '');
    // @ts-expect-error
    t.is(getValueFromCookieName(cookie, 1), '');
    // @ts-expect-error
    t.is(getValueFromCookieName(cookie), '');
    var cookie1 = 'lang_type=zh; uid=abcde';
    t.is(getValueFromCookieName(cookie1, 'uid'), 'abcde');
    // @ts-expect-error
    t.is(getValueFromCookieName(cookie1, null), '');
    // @ts-expect-error
    t.is(getValueFromCookieName(cookie1, undefined), '');
    // @ts-expect-error
    t.is(getValueFromCookieName('', undefined), '');
    // @ts-expect-error
    t.is(getValueFromCookieName(null, 1234), '');
    var cookie2 = 'HttpOnly; lang_type=zh; uid=abcde; 0=123; 123=';
    t.is(getValueFromCookieName(cookie2, 'lang_type'), 'zh');
    t.is(getValueFromCookieName(cookie2, '0'), '123');
    t.is(getValueFromCookieName(cookie2, '123'), '');
});
test.serial('setCookie & getCookieId - w/o document', function (t) {
    var key = 'monitor_id';
    var value = 'web_id_value';
    t.falsy(global.window);
    t.falsy(global.document);
    t.notThrows(function () {
        setCookie(key, value);
        getCookieId(key);
    });
});
test.serial('setCookie & getCookieId - w/ document', function (t) {
    browserEnv();
    var key = 'monitor_id';
    var value = 'web_id_value';
    t.assert(global.window);
    t.assert(global.document);
    setCookie(key, value);
    t.is(getCookieId(key), value);
});
//# sourceMappingURL=cookie.spec.js.map