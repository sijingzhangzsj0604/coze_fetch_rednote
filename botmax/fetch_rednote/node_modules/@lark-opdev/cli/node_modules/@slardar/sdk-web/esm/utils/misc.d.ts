import { CallBack } from '../types';
export declare function onPageLoad(callback: () => void): void;
export declare function onDOMContentLoaded(callback: () => void): void;
export interface OnPageUnloadCallback {
    (event: Event): void;
}
export interface PageHiddenCallback {
    (): void;
}
export declare const invokeCallbackOnce: <T>(cb?: CallBack<T> | undefined) => [(params: T) => void];
export declare const onPageUnload: (cb: OnPageUnloadCallback) => void;
export declare const onceHidden: (cb: PageHiddenCallback, once?: boolean) => void;
export declare const loadScript: (url: string, callback: () => void) => void;
export declare const getConfig: <T>(c: boolean | Partial<T> | null | undefined, defaultConfig: T) => false | T;
