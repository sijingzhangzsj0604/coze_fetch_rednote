import { SafeObservable } from '@slardar/sdk-template';
import { FetchNext, ResourceNext } from '../../collector';
import { HttpReport, ReportToReportEvent } from '../../types';
import { FetchMonitorConfig } from './type';
export declare type HTTPGetterWithFetchObserver = (report: (ev: ReportToReportEvent<HttpReport>) => void, tearDownGroup: (() => void)[], context: [SafeObservable<FetchNext>, () => SafeObservable<ResourceNext>], config: FetchMonitorConfig) => void;
export declare const httpGetterWithFetchObserver: HTTPGetterWithFetchObserver;
export declare const getFetchMethod: (req: string | Request, options: RequestInit, Request: {
    new (input: RequestInfo, init?: RequestInit | undefined): Request;
    prototype: Request;
}) => string;
