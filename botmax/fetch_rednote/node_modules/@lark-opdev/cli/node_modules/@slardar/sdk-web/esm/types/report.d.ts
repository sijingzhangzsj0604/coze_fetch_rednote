import { Common as CommonContext } from './thrift/browser/collector_v2/common';
import { CustomPayload } from './thrift/browser/collector_v2/custom';
import { HttpPayload, HttpReq } from './thrift/browser/collector_v2/http';
import { JsErrorPayload, JsError, Breadcrumb } from './thrift/browser/collector_v2/js_error';
import { PageviewPayload } from './thrift/browser/collector_v2/pageview';
import { ActionPayload } from './thrift/browser/collector_v2/action';
import { PerformancePayload } from './thrift/browser/collector_v2/performance';
import { PerformanceTimingPayload } from './thrift/browser/collector_v2/performance_timing';
import { PerformanceLongtaskPayload } from './thrift/browser/collector_v2/performance_longtask';
import { ResourceErrorPayload } from './thrift/browser/collector_v2/resource_error';
import { ResourcePayload } from './thrift/browser/collector_v2/resource';
import { SriPayload } from './thrift/browser/collector_v2/sri';
import { BlankScreenPayload } from './thrift/browser/collector_v2/blank_screen';
import { HeatmapPayload } from './thrift/browser/collector_v2/heatmap';
export declare type CustomReport = {
    ev_type: 'custom';
    payload: CustomPayload;
};
export declare type HttpReport = {
    ev_type: 'http';
    payload: HttpPayload;
};
export declare type JsErrorReport = {
    ev_type: 'js_error';
    payload: JsErrorPayload;
};
export declare type PageviewReport = {
    ev_type: 'pageview';
    payload: PageviewPayload;
};
export declare type ActionReport = {
    ev_type: 'action';
    payload: ActionPayload;
};
export declare type PerformanceReport = {
    ev_type: 'performance';
    payload: PerformancePayload | {
        metrics: PerformancePayload[];
    };
};
export declare type PerformanceLongTaskReport = {
    ev_type: 'performance_longtask';
    payload: PerformanceLongtaskPayload;
};
export declare type PerformanceTimingReport = {
    ev_type: 'performance_timing';
    payload: PerformanceTimingPayload;
};
export declare type ResourceErrorReport = {
    ev_type: 'resource_error';
    payload: ResourceErrorPayload;
};
export declare type ResourceReport = {
    ev_type: 'resource';
    payload: ResourcePayload | {
        resources: ResourcePayload[];
    };
};
export declare type SriReport = {
    ev_type: 'sri';
    payload: SriPayload;
};
export declare type BlankReport = {
    ev_type: 'blank_screen';
    payload: BlankScreenPayload;
};
export declare type HeatmapReport = {
    ev_type: 'heatmap';
    payload: HeatmapPayload;
};
export { CommonContext, JsError, HttpReq, Breadcrumb, HttpPayload, ResourceErrorPayload, SriPayload, PerformancePayload, ResourcePayload, PerformanceLongtaskPayload, ActionPayload, CustomPayload, JsErrorPayload, PageviewPayload, PerformanceTimingPayload, BlankScreenPayload, HeatmapPayload, };
export declare type WebReport = CustomReport | HttpReport | JsErrorReport | PageviewReport | PerformanceReport | PerformanceLongTaskReport | PerformanceTimingReport | ResourceErrorReport | ResourceReport | SriReport | BlankReport | ActionReport | HeatmapReport;
export declare type ReportToReportEvent<T extends WebReport> = T & {
    extra?: Partial<CommonContext>;
    overrides?: Partial<CommonContext>;
};
export declare type WebReportEvent = ReportToReportEvent<WebReport>;
