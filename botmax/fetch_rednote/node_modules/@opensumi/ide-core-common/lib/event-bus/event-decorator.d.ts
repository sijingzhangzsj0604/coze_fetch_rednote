import { Disposable } from '@opensumi/ide-utils';
import { ConstructorOf } from '../declare';
import { BasicEvent } from './basic-event';
import { IEventBus } from './event-bus-types';
export declare class WithEventBus extends Disposable {
    protected eventBus: IEventBus;
    constructor(...args: any[]);
}
export declare function OnEvent<T extends BasicEvent<any>>(Constructor: ConstructorOf<T>): (target: object, key: string, descriptor: TypedPropertyDescriptor<(event: T) => void>) => void;
//# sourceMappingURL=event-decorator.d.ts.map