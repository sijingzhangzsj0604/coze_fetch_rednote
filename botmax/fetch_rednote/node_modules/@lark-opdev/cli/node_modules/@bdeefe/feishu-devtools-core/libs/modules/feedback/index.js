"use strict";var __awaiter=this&&this.__awaiter||function(e,t,o,r){return new(o||(o=Promise))((function(c,n){function i(e){try{s(r.next(e))}catch(e){n(e)}}function a(e){try{s(r.throw(e))}catch(e){n(e)}}function s(e){var t;e.done?c(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(i,a)}s((r=r.apply(e,t||[])).next())}))},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const Module_1=__importDefault(require("../../common/Module")),feedback_1=require("../../protocol/feedback"),protocol_1=require("../../types/protocol"),common_1=require("../../config/common"),env_1=__importDefault(require("../../config/env")),fs_1=__importDefault(require("fs")),protocol_2=require("../../protocol"),api_1=require("../../config/api");class FeedbackModule extends Module_1.default{constructor(e){super(protocol_1.ModuleName.feedback),this.ctx={version:"",commitHash:""},this.ctx=e}[feedback_1.CmdEnum.Feedback](){const{feedbackUrl:e}=(0,common_1.getHelpConfig)();return e||""}[feedback_1.CmdEnum.DocUrl](){const{docList:e}=(0,common_1.getHelpConfig)();return Object.keys(e).map(t=>e[t])}[feedback_1.CmdEnum.FeedbackTip](){const{feedbackTip:e}=(0,common_1.getHelpConfig)();return e||(env_1.default.oversea?"The helpesk chat will be opened in your Lark App, please feedback there!":"The helpdesk chat will be opened in your Feishu App, please feedback there!")}[feedback_1.CmdEnum.reportIssue](e){return __awaiter(this,void 0,void 0,(function*(){const t=this.log.bind(this,"info",feedback_1.CmdEnum.reportIssue);try{t("receiveParams","end",e);const o=this.execute(protocol_1.ModuleName.storage,protocol_2.StorageCmdEnum.Get,"uuid"),{types:r,time:c,desc:n,contact:i,pics:a,useLog:s}=e,u={uuid:o,types:JSON.stringify(r),time:c,desc:n,contact:i,version:this.ctx.version,commitHash:this.ctx.commitHash};let d=[];s&&(d=yield this.logger.getLogs(new Date(c))),t("todayLogs","end",{logs:d}),a.forEach((e,t)=>{u["pics-"+t]=fs_1.default.createReadStream(e)});const l=[];return d.forEach((e,t)=>{const o=e+"copy";l.push(o),fs_1.default.copyFileSync(e,o),u["logs-"+t]=fs_1.default.createReadStream(o,{encoding:"utf8"})}),yield this.execute(protocol_1.ModuleName.service,protocol_2.ServiceCmdEnum.Request,api_1.API.reportIssue,u,{headers:{"content-type":"multipart/form-data"}}),l.forEach(e=>{fs_1.default.unlinkSync(e)}),{flag:!0}}catch(e){return t("occurSomeError","end",{error:e}),{flag:!1,message:e.toString()}}}))}}exports.default=FeedbackModule;