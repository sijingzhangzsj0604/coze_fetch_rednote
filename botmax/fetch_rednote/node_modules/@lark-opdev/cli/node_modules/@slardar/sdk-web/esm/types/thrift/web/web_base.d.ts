export declare const site_type_web = "web";
export declare const site_type_hybrid = "hybrid";
export declare const container_type_lynx = "lynx";
export declare const container_type_webview = "webview";
export declare const container_type_rn = "rn";
export declare const FilterTypeAnd = "and";
export declare const FilterTypeOr = "or";
export declare const FilterTypeRule = "rule";
export declare const FilterOpEq = "eq";
export declare const FilterOpNeq = "neq";
export declare const FilterOpLt = "lt";
export declare const FilterOpGt = "gt";
export declare const FilterOpLte = "lte";
export declare const FilterOpGte = "gte";
export declare const FilterOpIn = "in";
export declare const FilterOpNotIn = "not_in";
export declare const FilterOpRegex = "regex";
export declare const FilterOpNotRegex = "not_regex";
/** 公共请求参数 */
export interface CommonParams {
    bid: string;
    site_type: string;
    env: string;
    extra?: ExtraParams;
    lang?: string;
    oid?: string;
    /** support hybrid container type */
    container_type?: string;
}
export interface ExtraParams {
    /** flutter使用 */
    host_aid: Array<number>;
    /** flutter使用 */
    bid_int: Array<number>;
    /** flutter使用 */
    os: string;
    /** flutter使用 */
    flutter_id: number;
}
/** 简单返回 */
export interface SimpleResponse {
    errno: number;
    errmsg: string;
}
/** 简单返回 */
export interface CommonResponse {
    data: string;
    errno: number;
    errmsg: string;
}
export interface TimeFilter {
    start_time: number;
    granularity?: number;
    end_time: number;
}
/** 公共表格数据 */
export interface Field {
    id: string;
    dataType: string;
    name: string;
    aggregate?: string;
}
export interface ChartData {
    fields: Array<Field>;
    source: Array<Array<string>>;
}
export interface ChartDataWithExtra {
    data: ChartData;
    extra: {
        [key: string]: string;
    };
}
export interface Measure {
    name: string;
    aggregate?: string;
}
export interface Dimension {
    name: string;
    aggregate?: string;
}
/** 公共筛选条件 */
export interface FilterCondition {
    /** or 或者 and 或者rule */
    type: string;
    field?: string;
    op?: string;
    groupKey?: string;
    values?: Array<string>;
    /** 如果下层还有条件，则放入该处，这一层与field，op,groupkey以及values不能同时存在 */
    children?: Array<FilterCondition>;
}
export interface QueryInfo {
    measures: Array<Measure>;
    dimensions: Array<Dimension>;
    filter_conditions: FilterCondition;
}
/** 浮点数都用字符串传递 */
export interface OverviewTrendInfoItem {
    id: string;
    name: string;
    count: string;
    /** 单位，前端用的上 */
    unit?: string;
    /** +/- xx */
    change: string;
}
/** 趋势图公共 Request & Response */
/** 四条线一起返回，前端来控制展示 */
export interface OverviewTrendResponseData {
    chart: ChartData;
    info: Array<OverviewTrendInfoItem>;
    extra: TrendExtra;
}
export interface TrendExtra {
    release_info: Array<ReleaseInfo>;
}
export interface OverviewTrendResponse {
    data: OverviewTrendResponseData;
    errno: number;
    errmsg: string;
}
export interface OverviewTrendRequest {
    common: CommonParams;
    time_filter: TimeFilter;
    filter_conditions?: FilterCondition;
}
export interface ErrorCommonTrendRequest {
    common: CommonParams;
    time_filter: TimeFilter;
    diff_time?: Array<TimeFilter>;
    diff_filters?: Array<FilterCondition>;
    filter_conditions?: FilterCondition;
}
export interface ErrorCommonTrendResponse {
    data: ErrorCommonTrendResponseData;
    errno: number;
    errmsg: string;
}
export interface ErrorCommonTrendResponseData {
    chart: ChartData;
    diff_chart?: ChartData;
    info: Array<OverviewTrendInfoItem>;
    diff_info?: Array<OverviewTrendInfoItem>;
    extra: TrendExtra;
}
export interface ListRequest {
    common: CommonParams;
    time_filter: TimeFilter;
    filter_conditions?: FilterCondition;
    page_num: number;
    page_size: number;
    /** 正序还是倒序   asc / desc */
    order: string;
    /** 用哪个字段排序， count / user / offline_duration */
    order_by_metric: string;
    search_text?: string;
    calculate_type?: string;
}
export interface ListResponse {
    data: ListData;
    errmsg: string;
    errno: number;
}
export interface ListData {
    list_data: Array<ListItem>;
    list_count: number;
}
export interface ListItem {
    count: number;
    user: number;
    group_key: GroupKey;
    extra?: {
        [key: string]: string;
    };
    error_mini_chart: ChartData;
    user_mini_chart: ChartData;
    extra_mini_chart?: {
        [key: string]: ChartData;
    };
}
export interface GroupKey {
    key: string;
    group_dimention: string;
}
export interface EventListRequest {
    time_filter: TimeFilter;
    common: CommonParams;
    filter_conditions: FilterCondition;
    group_key: GroupKey;
    page_num: number;
    page_size: number;
}
export interface EventInfoRequest {
    time_filter: TimeFilter;
    common: CommonParams;
    filter_conditions: FilterCondition;
    group_key: GroupKey;
}
export interface EventListResponse {
    data: EventListResponseData;
    errmsg: string;
    errno: number;
}
/** 举例 */
/** source: [{"name": "操作系统", "value": "iOS"} ] */
export interface InfoForm {
    source: Array<Detail>;
    /** label： 用户信息 / 位置信息... */
    label: string;
}
export interface Detail {
    name: string;
    value: string;
}
export interface EventListResponseData {
    result: Array<EventListResp>;
    total: number;
}
export interface EventListResp {
    /** error详细信息 */
    info: InfoForm;
    /** user_info */
    user_info: Array<InfoForm>;
}
export interface EventInfoResponse {
    data: EventInfoResponseData;
    errmsg: string;
    errno: number;
}
export interface EventInfoResponseData {
    error: number;
    user: number;
    extra: {
        [key: string]: string;
    };
}
/** 指标数据对比公共 Request & Response */
export interface IndexOverviewRequest {
    /** 容器类型， rn / webview / lynx */
    container_type: string;
    common: CommonParams;
    time_filter: TimeFilter;
    filter_conditions: FilterCondition;
}
export interface IndexOverviewData {
    error: number;
    error_change: number;
    user: number;
    user_change: number;
    error_rate: number;
    error_rate_change: number;
    user_rate: number;
    user_rate_change: number;
}
export interface IndexOverviewResponse {
    data: IndexOverviewData;
    errmsg: string;
    errno: number;
}
export interface ReleaseInfo {
    create_at: number;
    release: string;
    env: string;
    commit: string;
}
/** 前端url里的过滤项结构 */
export interface FilterConditions {
    type: string;
    sub_conditions: Array<SubCondition>;
}
export interface SubCondition {
    type: string;
    op: string;
    dimension: string;
    groupKey?: string;
    values?: Array<string>;
    value?: string;
}
