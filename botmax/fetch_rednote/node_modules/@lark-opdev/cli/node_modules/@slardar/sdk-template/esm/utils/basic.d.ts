import { EventBuilder, EventSender } from '../types';
export declare const noopSender: EventSender<any>;
export declare const noopBuilder: EventBuilder<any, any>;
export declare type DirectBuilder<T> = EventBuilder<T, T>;
export declare const directBuilder: DirectBuilder<any>;
export interface EmptyConfig {
}
export declare const createBaseConfigManager: <C>(c: C) => {
    getConfig(): C;
    setConfig(c: Partial<C>): C;
    onChange(fn: () => void): void;
    onReady(fn: () => void): void;
};
export declare const createMergeConfigManager: <C>(c: C) => {
    getConfig(): C;
    setConfig(c: Partial<C>): C;
    onChange(fn: () => void): void;
    onReady(fn: () => void): void;
};
