import { __read, __spreadArray } from "tslib";
import test from 'ava';
import { hookObjectProperty, hookMethodDangerously } from '../hook-object';
var obj = {
    a: 3,
    b: { bb: '6' },
    c: function () { return 8; },
    d: function (n, m) { return m + n; },
    e: function (ee) {
        return this.a + ee;
    },
};
test.beforeEach(function () {
    obj = {
        a: 3,
        b: { bb: '6' },
        c: function () { return 8; },
        d: function (n, m) { return m + n; },
        e: function (ee) {
            return this.a + ee;
        },
    };
});
test('hookObjectProperty empty', function (t) {
    var obj = null;
    var restore = hookObjectProperty(obj, 'a', function () { return 4; })();
    t.is(obj, null);
    restore();
    t.is(obj, null);
    var obj2 = undefined;
    var restore2 = hookObjectProperty(obj2, 'a', function () { return 4; })();
    t.is(obj2, undefined);
    restore2();
    t.is(obj2, undefined);
});
test('hookObjectProperty primitive', function (t) {
    var restore = hookObjectProperty(obj, 'a', function () { return 4; })();
    t.is(obj.a, 4);
    restore();
    t.is(obj.a, 3);
});
test('hookObjectProperty object', function (t) {
    var restore = hookObjectProperty(obj, 'b', function () { return ({ bb: 7, bbb: '1' }); })();
    t.deepEqual(obj.b, { bb: 7, bbb: '1' });
    restore();
    t.deepEqual(obj.b, { bb: '6' });
});
test('hookObjectProperty function', function (t) {
    var restore = hookObjectProperty(obj, 'c', function (f) { return function () { return f() + 2; }; })();
    t.is(obj.c(), 10);
    restore();
    t.is(obj.c(), 8);
});
test('hookObjectProperty function should not throw error if isCatchError = true by default.', function (t) {
    var restore = hookObjectProperty(obj, 'c', function () { return function () {
        throw Error('error');
    }; })();
    t.is(obj.c(), 8);
    restore();
    t.is(obj.c(), 8);
});
test('hookObjectProperty function should throw error if isCatchError = false.', function (t) {
    var restore = hookObjectProperty(obj, 'c', function () { return function () {
        throw Error('error');
    }; }, false)();
    t.throws(function () { return obj.c(); });
    restore();
    t.is(obj.c(), 8);
});
test('hookObjectProperty function with args', function (t) {
    var restore = hookObjectProperty(obj, 'd', function (f, p) {
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return f.apply(void 0, __spreadArray([], __read(args), false)) + p;
        };
    })(3);
    t.is(obj.d(1, 2), 6);
    restore();
    t.is(obj.d(1, 2), 3);
});
test('hookObjectProperty function with this', function (t) {
    var restore = hookObjectProperty(obj, 'e', function (f, p) {
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return f.apply(this, args) + p;
        };
    })(3);
    t.is(obj.e(4), 10);
    restore();
    t.is(obj.e(4), 7);
});
test('hookObjectProperty multiple', function (t) {
    var restore1 = hookObjectProperty(obj, 'a', function () { return 10; })();
    var restore2 = hookObjectProperty(obj, 'e', function (f, p) {
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return f.apply(this, args) + p;
        };
    })(3);
    t.is(obj.e(4), 17);
    restore1();
    t.is(obj.e(4), 10);
    restore2();
    t.is(obj.e(4), 7);
});
test('hookObjectProperty double hook', function (t) {
    var originalValue = obj.c();
    var hook1_increase_count = 2;
    var hook2_increase_count = 5;
    var restore = hookObjectProperty(obj, 'c', function (f) { return function () { return f() + hook1_increase_count; }; })();
    t.is(obj.c(), originalValue + hook1_increase_count);
    var restore2 = hookObjectProperty(obj, 'c', function (f) { return function () { return f() + hook2_increase_count; }; })();
    t.is(obj.c(), originalValue + hook1_increase_count + hook2_increase_count);
    restore();
    t.is(obj.c(), originalValue + hook2_increase_count);
    restore2();
    t.is(obj.c(), originalValue);
    restore();
    t.is(obj.c(), originalValue);
});
test('hookMethodDangerously empty', function (t) {
    var obj = null;
    var restore = hookMethodDangerously(obj, 'a', function () { return 4; })();
    t.is(obj, null);
    restore();
    t.is(obj, null);
    var obj2 = undefined;
    var restore2 = hookMethodDangerously(obj2, 'a', function () { return 4; })();
    t.is(obj2, undefined);
    restore2();
    t.is(obj2, undefined);
});
test('hookMethodDangerously primitive', function (t) {
    var restore = hookMethodDangerously(obj, 'a', function () { return 4; })();
    t.is(obj.a, 4);
    restore();
    t.is(obj.a, 3);
});
test('hookMethodDangerously object', function (t) {
    var restore = hookMethodDangerously(obj, 'b', function () { return ({ bb: 7, bbb: '1' }); })();
    t.deepEqual(obj.b, { bb: 7, bbb: '1' });
    restore();
    t.deepEqual(obj.b, { bb: '6' });
});
test('hookMethodDangerously function', function (t) {
    var restore = hookMethodDangerously(obj, 'c', function (f) { return function () { return f() + 2; }; })();
    t.is(obj.c(), 10);
    restore();
    t.is(obj.c(), 8);
});
test('hookMethodDangerously function should throw error if hooked function throw error', function (t) {
    var restore = hookMethodDangerously(obj, 'c', function () { return function () {
        throw Error('error');
    }; })();
    t.throws(function () { return obj.c(); });
    restore();
    t.is(obj.c(), 8);
});
test('hookMethodDangerously function with args', function (t) {
    var restore = hookMethodDangerously(obj, 'd', function (f, p) {
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return f.apply(void 0, __spreadArray([], __read(args), false)) + p;
        };
    })(3);
    t.is(obj.d(1, 2), 6);
    restore();
    t.is(obj.d(1, 2), 3);
});
test('hookMethodDangerously function with this', function (t) {
    var restore = hookMethodDangerously(obj, 'e', function (f, p) {
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return f.apply(this, args) + p;
        };
    })(3);
    t.is(obj.e(4), 10);
    restore();
    t.is(obj.e(4), 7);
});
test('hookMethodDangerously multiple', function (t) {
    var restore1 = hookMethodDangerously(obj, 'a', function () { return 10; })();
    var restore2 = hookMethodDangerously(obj, 'e', function (f, p) {
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return f.apply(this, args) + p;
        };
    })(3);
    t.is(obj.e(4), 17);
    restore1();
    t.is(obj.e(4), 10);
    restore2();
    t.is(obj.e(4), 7);
});
test('hookMethodDangerously double hook', function (t) {
    var originalValue = obj.c();
    var hook1_increase_count = 2;
    var hook2_increase_count = 5;
    var restore = hookMethodDangerously(obj, 'c', function (f) { return function () { return f() + hook1_increase_count; }; })();
    t.is(obj.c(), originalValue + hook1_increase_count);
    var restore2 = hookMethodDangerously(obj, 'c', function (f) { return function () { return f() + hook2_increase_count; }; })();
    t.is(obj.c(), originalValue + hook1_increase_count + hook2_increase_count);
    restore();
    t.is(obj.c(), originalValue + hook2_increase_count);
    restore2();
    t.is(obj.c(), originalValue);
    restore();
    t.is(obj.c(), originalValue);
});
test('hookObjectProperty restore strict', function (t) {
    var originalValue = obj.c();
    var hook1_increase_count = 2;
    var restore = hookObjectProperty(obj, 'c', function (f) { return function () { return f() + hook1_increase_count; }; })();
    t.is(obj.c(), 10);
    var hook2_increase_count = 5;
    var restore2 = hookObjectProperty(obj, 'c', function (f) { return function () { return f() + hook2_increase_count; }; })();
    t.is(obj.c(), originalValue + hook1_increase_count + hook2_increase_count);
    restore(true);
    // is break
    t.is(obj.c(), originalValue + hook1_increase_count + hook2_increase_count);
    restore2(true);
    // is break
    t.is(obj.c(), originalValue + hook1_increase_count + hook2_increase_count);
    restore(true);
    // is break
    t.is(obj.c(), originalValue + hook1_increase_count + hook2_increase_count);
});
//# sourceMappingURL=hook-object.spec.js.map