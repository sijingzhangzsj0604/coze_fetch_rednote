import BaseModule from '../../common/Module';
import { APIItem } from '../../config/api';
import { CmdEnum, CmdMap, EventMap } from '../../protocol/service';
import { ModuleName } from '../../types/protocol';
import { ProxyConfig } from '../../types/service';
export default class ServiceModule extends BaseModule<ModuleName.service, EventMap> implements CmdMap {
    protected environment: string;
    protected larkSession: {
        ide?: string;
        debug?: string;
    };
    protected formatLarkSession(larkSession: string, larkSessionList: string[]): string;
    proxy: ProxyConfig;
    customHeaders: Record<string, string>;
    private v5URLList;
    constructor();
    created(): Promise<void>;
    private updateCustomHeaders;
    [CmdEnum.Init](): Promise<void>;
    [CmdEnum.Update](config: {
        environment?: string;
        larkSession?: string;
        larkSessionList?: string[];
        type?: keyof ServiceModule['larkSession'];
    }): void;
    [CmdEnum.GetEnvironment](): {
        environment: string;
    };
    [CmdEnum.GetV5URLList](): {
        v5URLList: string[];
    };
    [CmdEnum.SetV5URLList](v5URLList: string[]): void;
    [CmdEnum.SetProxy](proxyConfig: ProxyConfig): void;
    [CmdEnum.SetCustomHeaders](customHeaders: Record<string, string>): void;
    [CmdEnum.Request](api: APIItem, params?: any, options?: {
        headers?: {};
        responseHeader?: boolean;
        responseCode?: boolean;
        timeout?: number;
        traceId?: string;
        logId?: boolean;
        retries?: number;
    }): Promise<any>;
}
