import express from 'express';
export declare const AccountSplitsDefine = "*#*";
export declare function removeItem<I, L extends I[]>(list: L, item: I): boolean;
export declare function progressMock(maxTime: number, f: (n: number) => void, start?: number): {
    stop: () => void;
};
export declare function readFileContent<T = any>(dir: string, fileName: string): Promise<T>;
export declare function unpackPKGPath(pkgFile: string): string;
export declare function getInternalIp(useLocalAsDefault?: boolean): string;
export declare function checkCompilePath(compilePath: string | undefined): boolean;
export declare function getDirectorySize(dir: string): number;
export declare function getRandomString(): string;
export declare function base64Encode(str?: string): string;
export declare function base64Decode(base64StrParam?: string): string;
export declare function toHash(str: string): string;
export declare function startServer(dirPath: string, needWLAN: boolean, middlewares?: express.RequestHandler[]): {
    url: string;
    server: any;
};
export declare function startHTTPServer(dirPath: string, needWLAN: boolean, middlewares?: express.RequestHandler[]): string;
export declare const axiosGet: (url: string, timeout?: number, options?: {}) => Promise<any>;
export declare const getClipboardData: () => string;
export declare const setClipboardData: (value: string) => void;
export declare const unzipFile: (filePath: string, dirPath: string) => Promise<void>;
export declare function resolvePath(relativePath: string | undefined): string;
export declare function renameSafe(from: string, to: string, tries?: number): Promise<void>;
export declare function getFullDateNumbers(date?: Date): string;
