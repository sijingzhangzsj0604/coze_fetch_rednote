import { __read } from "tslib";
import { noop } from '@slardar/sdk-template';
import { BreadcrumbMonitor } from '../../monitors/breadcrumb';
import { applyMonitor } from '../../utils';
import { getPluginConfig } from './utils';
export var BREADCRUMB_MONITOR_PLUGIN_NAME = 'breadcrumb';
var defaultConfig = {
    maxBreadcrumbs: 20,
    dom: true,
};
export function BreadcrumbMonitorPlugin(client) {
    client.on('init', function () {
        var config = getPluginConfig(client, BREADCRUMB_MONITOR_PLUGIN_NAME, defaultConfig);
        if (!config) {
            return;
        }
        var _a = __read(applyMonitor(BreadcrumbMonitor, config, noop), 3), getBreadcrumbs = _a[0], addBreadcrumb = _a[1], tearDown = _a[2];
        client.on('report', function (ev) {
            if (ev.ev_type === 'http') {
                addBreadcrumb({
                    type: 'http',
                    category: ev.payload.api,
                    message: '',
                    data: {
                        method: ev.payload.request.method,
                        url: ev.payload.request.url,
                        status_code: String(ev.payload.response.status),
                    },
                    timestamp: ev.payload.request.timestamp,
                });
            }
            return ev;
        });
        client.on('beforeDestroy', tearDown);
        client.provide('getBreadcrumbs', getBreadcrumbs);
        client.provide('addBreadcrumb', addBreadcrumb);
    });
}
//# sourceMappingURL=breadcrumb.js.map