import BaseModule from '../../common/Module';
import { CmdEnum, CmdMap, EventMap } from '../../protocol/jssdk';
import { AppType, SDKInfo } from '../../types/commonData';
import { ModuleName } from '../../types/protocol';
export default class JSSDKModule extends BaseModule<ModuleName.jssdk, EventMap> implements CmdMap {
    protected curVersion: string;
    protected compilePath: string;
    constructor();
    get sdkRootPath(): string;
    protected downloadDebuggerJSSDK(info: {
        url: string;
        version: string;
    }): Promise<{
        path: string;
    }>;
    protected getCurVersion(compilePath: string, sdkList: SDKInfo[]): string;
    protected updateSdkStorage(appType: AppType, data: {
        sdkVersion: string;
        sdkList: SDKInfo[];
    }): void;
    protected updateCurrentStorage(compilePath: string, version: string): void;
    protected checkSdkExist(appType: AppType, curVersion: string, sdkList: SDKInfo[]): Promise<void>;
    [CmdEnum.Init](appType: AppType, compilePath: string): Promise<string>;
    [CmdEnum.Update](appType: AppType, compilePath: string, version: string): Promise<void>;
    [CmdEnum.ResolveSDKPath](version: string, _: AppType): string;
    [CmdEnum.DownloadDebuggerJSSDK](_: AppType, url: string): Promise<{
        path: string;
    }>;
    [CmdEnum.GetSdkList](appType: AppType): Promise<SDKInfo[]>;
    [CmdEnum.GetPreloadPath](): string;
}
