import { ElectronBuilder, ElectronCommandClient, ElectronConfig, ElectronInitConfig, ElectronReportEvent, ElectronSender, ElectronSendEvent, ElectronUserConfig } from './types';
export interface CreateElectronClientConfig {
    createSender?: (c: ElectronConfig) => ElectronSender;
    createDefaultConfig?: (c: Partial<ElectronConfig>) => ElectronConfig;
    builder?: ElectronBuilder;
}
export declare const createMinimalElectronClient: ({ createSender, builder, createDefaultConfig, }?: CreateElectronClientConfig) => import("@slardar/sdk-template").Client<ElectronReportEvent, ElectronSendEvent, ElectronBuilder, ElectronSender, ElectronInitConfig, ElectronUserConfig, ElectronConfig>;
export declare const createElectronClient: (config?: CreateElectronClientConfig) => ElectronCommandClient;
