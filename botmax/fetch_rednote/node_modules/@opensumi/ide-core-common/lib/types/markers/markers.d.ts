import { URI } from '@opensumi/ide-utils';
export interface MapMap<V> {
    [key: string]: {
        [key: string]: V;
    };
}
export declare namespace MapMap {
    function get<V>(map: MapMap<V>, key1: string, key2: string): V | undefined;
    function getMap<V>(map: MapMap<V>, key: string): {
        [key: string]: V;
    } | undefined;
    function set<V>(map: MapMap<V>, key1: string, key2: string, value: V): void;
    function setMap<V>(map: MapMap<V>, key: string, value: {
        [key: string]: V;
    }): void;
    function remove(map: MapMap<any>, key1: string, key2: string): boolean;
    function removeMap<V>(map: MapMap<V>, key: string): {
        [key: string]: V;
    } | undefined;
    function keys(map: MapMap<any>): string[];
}
/**
 * Marker的严重程度
 */
export declare enum MarkerSeverity {
    Hint = 1,
    Info = 2,
    Warning = 4,
    Error = 8
}
export declare namespace MarkerSeverity {
    function compare(a: MarkerSeverity, b: MarkerSeverity): number;
}
export declare const enum MarkerTag {
    Unnecessary = 1,
    Deprecated = 2
}
/**
 * diagnosis的相关信息
 */
export interface IRelatedInformation {
    resource: string;
    message: string;
    startLineNumber: number;
    startColumn: number;
    endLineNumber: number;
    endColumn: number;
}
/**
 * A structure defining a problem/warning/etc.
 */
export interface IMarkerData {
    code?: string;
    codeHref?: URI;
    severity: MarkerSeverity;
    message: string;
    source?: string;
    startLineNumber: number;
    startColumn: number;
    endLineNumber: number;
    endColumn: number;
    relatedInformation?: IRelatedInformation[];
    tags?: MarkerTag[];
}
export interface IMarker extends IMarkerData {
    type: string;
    resource: string;
}
/**
 * marker 信息统计
 */
export interface MarkerStatistics {
    errors: number;
    warnings: number;
    infos: number;
    unknowns: number;
}
//# sourceMappingURL=markers.d.ts.map