import { SampleConfig } from '@slardar/sdk-web';
import { ElectronConfig, ElectronServerConfig } from './types';
interface ConfigHolder {
    __SLARDAR__REPALCE__HOLDER__?: ElectronServerConfig;
    get: () => ElectronServerConfig | undefined;
}
export declare const configHolder: ConfigHolder;
export declare const createElectronConfigManager: (defaultConfig: ElectronConfig) => {
    getConfig(): ElectronConfig;
    setConfig(c: Partial<ElectronConfig>): ElectronConfig;
    onChange(fn: () => void): void;
    onReady(fn: () => void): void;
};
export declare function getServerConfig(config: ElectronConfig, cb: (setting?: any) => void): void;
export declare function mergeSampleConfig(a?: Partial<SampleConfig>, b?: Partial<SampleConfig>): Partial<SampleConfig> | undefined;
export {};
