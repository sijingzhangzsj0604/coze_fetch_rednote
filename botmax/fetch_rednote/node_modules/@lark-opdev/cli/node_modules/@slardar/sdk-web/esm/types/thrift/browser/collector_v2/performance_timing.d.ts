import * as common from './common';
export { common };
export interface PerformanceTimingSend {
    /** performance_timing */
    ev_type: string;
    payload: PerformanceTimingPayload;
    common: common.Common;
}
export interface PerformanceTimingPayload {
    /** level 1 https://www.w3.org/TR/navigation-timing/ */
    timing?: PerformanceTiming;
    /** level 2 https://www.w3.org/TR/navigation-timing-2/ */
    navigation_timing?: PerformanceNavigationTiming;
    /** 是否跳出 */
    isBounced: boolean;
}
export interface PerformanceTiming {
    connectEnd: number;
    connectStart: number;
    domComplete: number;
    domContentLoadedEventEnd: number;
    domContentLoadedEventStart: number;
    domInteractive: number;
    domLoading: number;
    domainLookupEnd: number;
    domainLookupStart: number;
    fetchStart: number;
    loadEventEnd: number;
    loadEventStart: number;
    navigationStart: number;
    redirectEnd: number;
    redirectStart: number;
    requestStart: number;
    responseEnd: number;
    responseStart: number;
    secureConnectionStart: number;
    unloadEventEnd: number;
    unloadEventStart: number;
}
export interface PerformanceNavigationTiming {
    /** struct PerformanceResourceTiming { */
    /** struct PerformanceEntry { */
    duration: number;
    entryType: string;
    name: string;
    startTime: number;
    /** } */
    connectEnd: number;
    connectStart: number;
    decodedBodySize: number;
    domainLookupEnd: number;
    domainLookupStart: number;
    encodedBodySize: number;
    fetchStart: number;
    initiatorType: string;
    nextHopProtocol: string;
    redirectEnd: number;
    redirectStart: number;
    requestStart: number;
    responseEnd: number;
    responseStart: number;
    secureConnectionStart: number;
    transferSize: number;
    workerStart: number;
    /** } */
    domComplete: number;
    domContentLoadedEventEnd: number;
    domContentLoadedEventStart: number;
    domInteractive: number;
    loadEventEnd: number;
    loadEventStart: number;
    redirectCount: number;
    type: string;
    unloadEventEnd: number;
    unloadEventStart: number;
}
export interface PerformanceResourceTiming {
    /** struct PerformanceEntry { */
    duration: number;
    entryType: string;
    name: string;
    startTime: number;
    /** } */
    connectEnd: number;
    connectStart: number;
    decodedBodySize: number;
    domainLookupEnd: number;
    domainLookupStart: number;
    encodedBodySize: number;
    fetchStart: number;
    initiatorType: string;
    nextHopProtocol: string;
    redirectEnd: number;
    redirectStart: number;
    requestStart: number;
    responseEnd: number;
    responseStart: number;
    secureConnectionStart: number;
    transferSize: number;
    workerStart: number;
    serverTiming?: ReadonlyArray<PerformanceServerTiming>;
}
export interface PerformanceServerTiming {
    description: string;
    duration: number;
    name: string;
}
export interface PerformanceEntry {
    duration: number;
    entryType: string;
    name: string;
    startTime: number;
}
