import { WebReportEvent, PerformanceLongTaskReport, CommonContext } from '../../types';
import { PerformancePayload } from '../../types/thrift/browser/collector_v2/performance';
import { PerformanceLongtask } from '../../types/thrift/browser/collector_v2/performance_longtask';
export declare const SINGLE_METRIC_EV_TYPE = "performance";
export declare const LONG_TASK_EV_TYPE = "performance_longtask";
export declare const applySendOnceAndTearDown: <T>(wrapPerformanceMetric: (metric: T) => WebReportEvent, report: (ev: WebReportEvent) => void, tearDownGroup: (() => void)[]) => (metric: T) => void;
export declare const wrapPerformanceMetric: (metric: PerformancePayload, overrides?: Partial<CommonContext> | undefined) => WebReportEvent;
export declare const wrapLongtask: (entry: PerformanceLongtask) => PerformanceLongTaskReport;
export declare const applyReportMetric: (report: (ev: WebReportEvent) => void) => (metric: PerformancePayload, overrides?: Partial<CommonContext> | undefined) => void;
export declare const SPA_LOAD_METRIC_NAME = "spa_load";
export declare const getSPA: (report: (ev: WebReportEvent) => void) => (() => void)[];
