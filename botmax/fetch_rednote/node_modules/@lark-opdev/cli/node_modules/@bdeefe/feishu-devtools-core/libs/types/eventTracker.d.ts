export declare type InitConfig = {
    commonTags: Record<string, string | number>;
    isOpen: boolean;
    bid: string;
    monitors?: {};
    plugins?: {};
};
declare type logLevel = 'info' | 'error' | 'warn';
declare type Tags = {
    [k: string]: string;
};
export declare type FlexibleEventParams = {
    type: 'counter' | 'timer';
    event_name: string;
    value: number;
    tags: Tags;
};
export declare type FlexibleLogParams = {
    type: 'log';
    level: logLevel;
    value: string;
    tags: Tags;
};
export declare type SlardarLogParam = {
    tags?: Tags;
    level?: logLevel;
    value: string;
};
export declare type SlardarTimelineParam = {
    eventName: string;
    startTime: string | number;
    endTime: string | number;
    timeLine: {
        tag: string;
        timestamp: number | string;
    }[];
};
export declare type PerformanceTrackEventParams = {
    timeStart: number;
    timeEnd: number;
    duration: number;
    error: Error;
    [k: string]: unknown;
};
export declare type TrackItem = {
    start: number;
    timings: Record<string, number>;
    tags: Record<string, string | number>;
};
export declare type PerformanceTrackEvent = string;
declare type CliCommandKey = 'login_start' | 'logout_start' | 'preview_start' | 'upload_start' | 'feedback_start' | 'tenant_start' | 'token_start' | 'whoami_start' | 'create_start' | 'switch_start' | 'log_start' | 'command_start' | 'command_end';
export declare type NormalCounterKey = CliCommandKey | 'install_cli' | 'uninstall_cli' | 'copy_source_path' | 'audit_start' | 'w_debug_app_data_click' | 'w_debug_audit_run' | 'http_proxy';
declare type NormalCounterMap = {
    [k in NormalCounterKey]: {
        value?: number;
        tags?: {};
    };
};
export declare type CounterEventMap = NormalCounterMap & {
    w_debug_audit_block_url_setting: {
        tags: {
            block_urls: string;
        };
        value?: number;
    };
    w_debug_mock_enable: {
        tags: {
            enable: string;
        };
        value?: number;
    };
};
export declare type NormalTimerKey = 'plugin_active_time' | 'login_ui_time' | 'logout_total_time' | 'logout_ui_time' | 'show_simulator_time' | 'show_devtools_time';
export declare type NormalTimerTag = {
    error?: Error;
};
declare type NormalTimerMap = {
    [k in NormalTimerKey]: {
        value: number;
        tags?: NormalTimerTag;
    };
};
export declare type TimerEventMap = NormalTimerMap & {
    login_total_time: {
        tags: {
            env: string;
        };
        value: number;
    };
    preview_total_time: {
        tags: {
            platform: string;
            appType: string;
        };
        value: number;
    };
    preview_ui_time: {
        tags: {
            platform: string;
            appType: string;
        };
        value: number;
    };
    upload_total_time: {
        tags: {
            platform: string;
            appType: string;
        };
        value: number;
    };
    upload_ui_time: {
        tags: {
            platform: string;
            appType: string;
        };
        value: number;
    };
    loading_to_biz_time: {
        tags: {
            id: string;
            argv: string;
            startTime: string;
            enterOclif: string;
            startInitHook: string;
            endInitHook: string;
            enterBiz: string;
            endTime: string;
        };
        value: number;
    };
};
export {};
