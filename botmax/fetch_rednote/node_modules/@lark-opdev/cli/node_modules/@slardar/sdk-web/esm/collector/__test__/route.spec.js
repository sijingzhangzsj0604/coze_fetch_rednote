import test from 'ava';
import sinon from 'sinon';
import { observeHistory, observeHash } from '../route';
import { mockHistoryAndLocation } from './mock';
var browserEnv = require('browser-env');
test.skip('observeHistory', function (t) {
    var next = sinon.fake();
    var tearDown = sinon.fake();
    var _a = mockHistoryAndLocation('http://test.com/init-path'), location = _a.location, history = _a.history, setHref = _a.setHref;
    browserEnv({ location: location, history: history, setHref: setHref });
    observeHistory(next, tearDown);
    t.assert(next.notCalled);
    history.pushState({}, '', 'http://test.com/beta-path');
    t.assert(next.calledOnce);
    t.is(next.args[0][0], 'http://test.com/beta-path');
    history.replaceState({}, '', 'http://test.com/theta-path');
    t.assert(next.calledTwice);
    t.is(next.args[1][0], 'http://test.com/theta-path');
    setHref('http://test.com/gamma-path');
    window.dispatchEvent(new window.Event('popstate'));
    t.assert(next.calledThrice);
    t.is(next.args[2][0], 'http://test.com/gamma-path');
    t.assert(tearDown.calledOnce);
});
test.skip('observeHash', function (t) {
    var next = sinon.fake();
    var tearDown = sinon.fake();
    var _a = mockHistoryAndLocation('http://test.com/init-path'), location = _a.location, setHref = _a.setHref;
    browserEnv({ location: location, setHref: setHref });
    observeHash(next, tearDown);
    setHref('http://test.com/index?some=query#next-hash');
    window.dispatchEvent(new window.Event('hashchange'));
    t.assert(next.calledOnce);
    t.is(next.args[0][0], 'http://test.com/index?some=query#next-hash');
});
//# sourceMappingURL=route.spec.js.map