"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_extra_1 = __importDefault(require("fs-extra"));
const path_1 = __importDefault(require("path"));
const feishu_devtools_core_1 = require("@bdeefe/feishu-devtools-core");
const config_1 = __importDefault(require("../utils/config"));
const env_1 = __importDefault(require("../utils/env"));
class Service extends feishu_devtools_core_1.ServiceModule {
    [feishu_devtools_core_1.ServiceCmdEnum.Init]() {
        if (process.env.OPDEV_TOKEN) {
            this.larkSession.ide = 'opdev-token=' + process.env.OPDEV_TOKEN;
            if (process.env.OPDEV_ENV) {
                this.environment = process.env.OPDEV_ENV;
            }
            else {
                this.environment = env_1.default.environments[0].id;
            }
            try {
                const { data } = fs_extra_1.default.readJSONSync(path_1.default.join(config_1.default.config.CacheRoot, config_1.default.config.updateFile));
                const { v5URLList = [] } = data;
                super[feishu_devtools_core_1.ServiceCmdEnum.SetV5URLList](v5URLList);
            }
            catch (e) {
                const logger = this.log.bind(this, 'info', feishu_devtools_core_1.ServiceCmdEnum.Init);
                logger('service', 'cli v5ReadFail', { message: e.message });
            }
            return Promise.resolve();
        }
        else {
            return super[feishu_devtools_core_1.ServiceCmdEnum.Init]();
        }
    }
}
exports.default = Service;
