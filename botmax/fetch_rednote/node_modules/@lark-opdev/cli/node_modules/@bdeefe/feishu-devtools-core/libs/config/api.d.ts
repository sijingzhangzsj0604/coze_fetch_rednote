export declare enum SubDomain {
    open = "open",
    passport = "passport",
    docs = "internal-api-space"
}
export declare type Response<T> = {
    error: number;
    code: number;
    message: string;
    msg?: string;
    data: T;
    status?: number;
    logId: string;
    stable?: 0 | 1;
};
declare const baseURL: {
    devtools: string;
    devtoolsNew: string;
    gadget: string;
    platform: string;
    platformNew: string;
    developer: string;
    passport: string;
    docs: string;
    h5JSSDK: string;
    openPlatform: string;
    ide: string;
};
declare type APIType = {
    [K: string]: APIItem;
};
export declare const OPEN_PLATFORM_APP_ID = 7;
export declare const API: APIType;
export declare const newAPI: APIType;
export declare type APIItem = {
    type: keyof typeof baseURL;
    method: 'GET' | 'POST' | 'PUT' | 'DELETE' | '';
    url: string;
    subDomain: SubDomain;
    sessionType?: 'ide' | 'debug';
    key?: string;
};
export declare function getDomain(environment: string, type?: APIItem['type']): string | undefined;
export declare const getBasePath: (type: APIItem['type']) => string;
export declare function getBaseURL(environment: string, type: APIItem['type'], subDomain: APIItem['subDomain']): string;
export {};
