/* eslint-disable @typescript-eslint/prefer-nullish-coalescing */
import { initSubjectInGlobal, initPrivateSubject } from '@slardar/sdk-template';
import { applyPV, PV_SUBJECT_NAME } from '../../collector/client';
import { XHR_SUBJECT_NAME, applyXHR, fetchSubject } from '../../collector/http';
import { longtaskSubject, resourceSubject } from '../../collector/pref';
import { getTTI } from '../../monitors/performance-new/tti';
import { getPluginConfig, reportOnInitCommonParams } from './utils';
export var TTI_MONITOR_PLUGIN_NAME = 'tti';
export function TTIMonitorPlugin(client) {
    client.on('init', function () {
        var config = getPluginConfig(client, TTI_MONITOR_PLUGIN_NAME, {});
        if (!config) {
            return;
        }
        var tearDownGroup = [];
        getTTI(reportOnInitCommonParams(client), tearDownGroup, [
            initSubjectInGlobal(client, [XHR_SUBJECT_NAME, applyXHR(XMLHttpRequest && XMLHttpRequest.prototype)]),
            initSubjectInGlobal(client, fetchSubject),
            initSubjectInGlobal(client, longtaskSubject),
            initSubjectInGlobal(client, resourceSubject),
            initPrivateSubject(client, [PV_SUBJECT_NAME, applyPV(client)]),
        ], client.pp);
        client.on('beforeDestroy', function () {
            tearDownGroup.forEach(function (e) { return e(); });
        });
    });
}
//# sourceMappingURL=tti.js.map