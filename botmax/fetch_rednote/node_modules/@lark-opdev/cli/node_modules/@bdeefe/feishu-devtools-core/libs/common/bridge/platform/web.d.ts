import Bridge from '../base';
import { ApiMap, HandlerMap, Schema, Config, VscodeApiInstance, SDK } from '../types';
export default class WebBridge<A extends ApiMap = {}, E extends HandlerMap = {}, S = Schema<A, E>> extends Bridge<A, E, S> {
    private vscode;
    constructor();
    constructor(vscodeApi: VscodeApiInstance);
    constructor(conf: Config<A, E, S>);
    constructor(injectSdk: SDK<A, Bridge<A, E, S>>);
    constructor(vscodeApi: VscodeApiInstance, conf: Config<A, E, S>);
    constructor(vscodeApi: VscodeApiInstance, injectSdk: SDK<A, Bridge<A, E, S>>);
    constructor(conf: Config<A, E, S>, injectSdk: SDK<A, Bridge<A, E, S>>);
    constructor(vscodeApi: VscodeApiInstance, conf: Config<A, E, S>, injectSdk: SDK<A, Bridge<A, E, S>>);
    getVscode(): VscodeApiInstance;
    protected postMessage(data: S): void;
    protected onmessage(): void;
}
