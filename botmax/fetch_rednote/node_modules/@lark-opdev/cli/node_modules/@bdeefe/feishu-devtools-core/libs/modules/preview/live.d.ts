import Manager from '../../common/ModuleManager';
import { CmdEnum } from '../../protocol/preview';
import { AppTypeEnum } from '../../types/commonData';
import { PreviewGadgetOptions, PreviewType } from '../../types/preview';
import { GadgetPlatform } from '../../types/upload';
import PreviewModule from './index';
export default abstract class LivePreviewModule extends PreviewModule {
    private isFirstCompile;
    private fromSPA;
    protected launchOptions: {
        appId: string;
        serverUrl: string;
        targetPath: string;
        compilePath: string;
        enableWebviewSafeDomain: boolean;
        gadgetSafeUrls: string[];
        startPage?: string;
    };
    protected previewType: PreviewType;
    protected isDebug: boolean;
    private getPackageHash;
    private compileFail;
    protected getPreviewUrl(type: PreviewType, appid: string, appType: AppTypeEnum, url: string, version: string, urlParams: Record<string, string>, enableWebviewSafeDomain: boolean, gadgetSafeUrls: string[], startPage?: string): string;
    private onGadgetCompileEnd;
    protected registerEvents(manager: Manager): void;
    [CmdEnum.previewGadget](options: PreviewGadgetOptions): Promise<void | {
        schemaUrl: string;
        warnMsgs: string[];
    }>;
    [CmdEnum.pushDebugMsg](options: {
        appId: string;
        appType?: AppTypeEnum;
        serverUrl: string;
        targetPath: string;
        compilePath: string;
        fileServerPort: number;
        productName: string;
        previewType: PreviewType;
        enableWebviewSafeDomain: boolean;
        extensionId?: string;
        previewPlatform?: GadgetPlatform;
        wsForDebug?: string;
        debugPreviewType?: string;
        startPage?: string;
        traceId?: string;
    }): Promise<string | undefined>;
    private getComponentList;
}
