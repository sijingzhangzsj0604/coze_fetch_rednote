import { __read, __spreadArray } from "tslib";
export var createLogger = function (prefix, prefixLen) {
    if (prefixLen === void 0) { prefixLen = 20; }
    var count = 0;
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        // eslint-disable-next-line no-console
        console.log.apply(console, __spreadArray([prefix.padStart(prefixLen, ' '), Date.now(), ("" + count++).padStart(8, ' ')], __read(args), false));
    };
};
var count = 0;
export var log = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    // eslint-disable-next-line no-console
    console.log.apply(console, __spreadArray(['[SDK]', Date.now(), ("" + count++).padStart(8, ' ')], __read(args), false));
};
var errCount = 0;
export var error = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    // eslint-disable-next-line no-console
    console.error.apply(console, __spreadArray(['[SDK]', Date.now(), ("" + errCount++).padStart(8, ' ')], __read(args), false));
};
var warnCount = 0;
export var warn = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    // eslint-disable-next-line no-console
    console.warn.apply(console, __spreadArray(['[SDK]', Date.now(), ("" + warnCount++).padStart(8, ' ')], __read(args), false));
};
//# sourceMappingURL=logger.js.map