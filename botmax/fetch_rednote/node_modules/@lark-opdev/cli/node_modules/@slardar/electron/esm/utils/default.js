var _a;
import { uuid, noop } from '@slardar/sdk-template';
import { BATCH_REPORT_PATH, CRASH_DOMAIN, CRASH_PATH, DEFAULT_SAMPLE_CONFIG, REPORT_DOMAIN, SETTINGS_DOMAIN, SETTINGS_PATH, } from '../constants';
import { JS_ERR_PLUGIN_NAME, PC_PERF_PLUGIN_NAME } from '../plugins';
import { CRASH_PLUGIN_NAME } from '../plugins/crash';
import { getDefaultUserIdAndDeviceId } from './storage';
export var getDefaultConfig = function (_c) {
    var _a, _b;
    var storageInfo = getDefaultUserIdAndDeviceId(_c.bid, _c.localDataPath);
    return {
        bid: '',
        pid: '',
        localDataPath: '',
        viewId: '_' + Date.now(),
        userId: (_a = storageInfo.userId) !== null && _a !== void 0 ? _a : '',
        deviceId: (_b = storageInfo.deviceId) !== null && _b !== void 0 ? _b : '',
        sessionId: getDefaultSessionId(),
        reportDomain: REPORT_DOMAIN,
        reportPath: BATCH_REPORT_PATH,
        serverDomain: SETTINGS_DOMAIN,
        serverPath: SETTINGS_PATH,
        crashDomain: CRASH_DOMAIN,
        crashPath: CRASH_PATH,
        plugins: defaultPlugins,
        release: '',
        env: 'production',
        transport: {
            get: noop,
            post: noop,
        },
        sample: DEFAULT_SAMPLE_CONFIG,
    };
};
export var getDefaultSessionId = function () {
    return uuid();
};
export var defaultPlugins = (_a = {},
    _a[PC_PERF_PLUGIN_NAME] = {
        cpu: {
            dataGetter: noop,
        },
        memory: {
            dataGetter: noop,
        },
    },
    _a[CRASH_PLUGIN_NAME] = {
        crashReporter: null,
    },
    _a[JS_ERR_PLUGIN_NAME] = {},
    _a);
//# sourceMappingURL=default.js.map