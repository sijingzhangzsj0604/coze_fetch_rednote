"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HashCalculateServiceImpl = exports.IHashCalculateService = void 0;
const tslib_1 = require("tslib");
const di_1 = require("@opensumi/di");
const ide_utils_1 = require("@opensumi/ide-utils");
const lockedCreate_1 = require("./lockedCreate");
const md5_wasm_json_1 = tslib_1.__importDefault(require("./md5.wasm.json"));
const mutex_1 = require("./mutex");
exports.IHashCalculateService = Symbol('IHashCalculateService');
function md5WasmCalculatorFactory() {
    const mutex = new mutex_1.Mutex();
    return (0, lockedCreate_1.lockedCreate)(mutex, md5_wasm_json_1.default, 16);
}
let HashCalculateServiceImpl = class HashCalculateServiceImpl {
    constructor() {
        this._initialized = false;
    }
    get initialized() {
        return this._initialized;
    }
    async initialize() {
        if (!this.cachedCalculator) {
            this.cachedCalculator = await md5WasmCalculatorFactory();
        }
        this._initialized = true;
    }
    calculate(content) {
        if (!this.initialized) {
            throw new Error('Please call #initialize first!');
        }
        const hash = this.cachedCalculator.calculate(content);
        return hash;
    }
};
tslib_1.__decorate([
    ide_utils_1.memoize,
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", []),
    tslib_1.__metadata("design:returntype", Promise)
], HashCalculateServiceImpl.prototype, "initialize", null);
HashCalculateServiceImpl = tslib_1.__decorate([
    (0, di_1.Injectable)()
], HashCalculateServiceImpl);
exports.HashCalculateServiceImpl = HashCalculateServiceImpl;
//# sourceMappingURL=hash-calculate.js.map