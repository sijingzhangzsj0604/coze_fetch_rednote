import { IntlMessageFormat, Options as FormatOptions } from 'intl-messageformat'

import type { IntlModule, I18n as StarlingIntl } from '@ies/starling_intl'
import type { i18n as I18next } from 'i18next'

declare interface IcuConfig {
  /**
   * 如果为 false，则会忽略 ICU 检查，不建议设置为 false
   */
  strict?: boolean
  formatOptions?: FormatOptions
}

declare const pluginName: 'IES_INTL_ICU_PLUGIN'
export { IntlMessageFormat, pluginName }

export default class implements IntlModule<'i18nFormat'> {
  static readonly type: 'i18nFormat'
  public readonly type: 'i18nFormat'

  public name: typeof pluginName

  static staticInit(i18next: typeof StarlingIntl): void
  init(i18next: I18next): void
  addLocaleData(data: any): void
  addUserDefinedFormats(formats: any): void
  parse(
    res: string,
    options: {
      defaultValue?: string
      fallbackText?: string
    } & Record<string, string | number>,
    lng: string,
    ns: string,
    key: string,
    info: any
  ): any
  clearCache(): void
  addLookupKeys(finalKeys: any, key: any, code: any, ns: any, options: any): any
}

declare module '@ies/starling_intl' {
  export interface IIcuConfig extends IcuConfig {}
}
