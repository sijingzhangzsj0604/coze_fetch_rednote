import { EventSender, SdkTransport } from './types';
export declare type BatchEvent<E> = {
    ev_type: 'batch';
    list: E[];
};
export declare type FailureCallbackType = (err: Error, data: string) => void;
export declare type BatchSender<E> = EventSender<E> & {
    fail?: (callback: FailureCallbackType) => void;
    getSize: () => number;
    getWait: () => number;
    setSize: (v: number) => void;
    setWait: (v: number) => void;
    getEndpoint: () => string;
    setEndpoint: (v: string) => void;
    flush: () => void;
    getBatchData: () => string;
    clear: () => void;
};
export interface BatchSenderConfig {
    endpoint: string;
    transport: SdkTransport;
    size?: number;
    wait?: number;
}
export declare const stringifyBatch: (list: any[]) => string;
export declare function createBatchSender<E>(config: BatchSenderConfig): BatchSender<E>;
