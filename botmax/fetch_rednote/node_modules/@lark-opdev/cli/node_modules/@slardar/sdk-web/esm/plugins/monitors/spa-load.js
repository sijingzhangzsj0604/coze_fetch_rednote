import { initSubjectInGlobal, initPrivateSubject } from '@slardar/sdk-template';
import { PV_SUBJECT_NAME, applyPV } from '../../collector/client';
import { fetchSubject, XHR_SUBJECT_NAME, applyXHR } from '../../collector/http';
import { resourceSubject, longtaskSubject } from '../../collector/pref';
import { getSPA } from '../../monitors/performance-new/spa';
import { getDefaultDocument, getDefaultMutationObserver } from '../../utils';
export function SPALoadMonitorPlugin(client) {
    client.on('init', function () {
        var tearDownGroup = [];
        var document = getDefaultDocument();
        var MutationObserver = getDefaultMutationObserver();
        if (!document || !MutationObserver)
            return;
        getSPA(client.report.bind(client), tearDownGroup, [
            initPrivateSubject(client, [PV_SUBJECT_NAME, applyPV(client)]),
            initSubjectInGlobal(client, [XHR_SUBJECT_NAME, applyXHR(XMLHttpRequest && XMLHttpRequest.prototype)]),
            initSubjectInGlobal(client, fetchSubject),
            initSubjectInGlobal(client, resourceSubject),
            initSubjectInGlobal(client, longtaskSubject),
            MutationObserver,
        ]);
        client.on('beforeDestroy', function () {
            tearDownGroup.forEach(function (e) { return e(); });
        });
    });
}
//# sourceMappingURL=spa-load.js.map