"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const indent_string_1 = __importDefault(require("indent-string"));
const plugin_help_1 = require("@oclif/plugin-help");
const list_1 = require("@oclif/plugin-help/lib/list");
const root_1 = __importDefault(require("./root"));
const command_1 = __importDefault(require("./command"));
class CustomHelp extends plugin_help_1.Help {
    formatRoot() {
        const help = new root_1.default(this.config, this.opts);
        return help.root();
    }
    formatCommand(command) {
        const help = new command_1.default(command, this.config, this.opts);
        return help.generate();
    }
    showRootHelp() {
        const param = process.argv[process.argv.length - 1];
        if (['-a', '--all'].includes(param)) {
            const { bin, commands } = this.config;
            const body = (0, list_1.renderList)(commands.map((command) => [
                command.id,
                command.description &&
                    this.render(command.description.split('\n')[0]),
            ]), {
                spacer: '\n',
                stripAnsi: this.opts.stripAnsi,
                maxWidth: this.opts.maxWidth - 2,
            });
            console.log([
                `See '${bin} help <command>' to read about a specific subcommand`,
                '',
                'Main Porcelain Commands:',
                (0, indent_string_1.default)(body, 2),
            ].join('\n'));
        }
        else {
            console.log(this.formatRoot());
            console.log('');
        }
    }
}
exports.default = CustomHelp;
