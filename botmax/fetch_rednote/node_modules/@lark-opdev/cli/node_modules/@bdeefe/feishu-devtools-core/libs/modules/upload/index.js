"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,o,t,r){void 0===r&&(r=t);var a=Object.getOwnPropertyDescriptor(o,t);a&&!("get"in a?!o.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return o[t]}}),Object.defineProperty(e,r,a)}:function(e,o,t,r){void 0===r&&(r=t),e[r]=o[t]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,o){Object.defineProperty(e,"default",{enumerable:!0,value:o})}:function(e,o){e.default=o}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var o={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&__createBinding(o,e,t);return __setModuleDefault(o,e),o},__awaiter=this&&this.__awaiter||function(e,o,t,r){return new(t||(t=Promise))((function(a,s){function i(e){try{n(r.next(e))}catch(e){s(e)}}function d(e){try{n(r.throw(e))}catch(e){s(e)}}function n(e){var o;e.done?a(e.value):(o=e.value,o instanceof t?o:new t((function(e){e(o)}))).then(i,d)}n((r=r.apply(e,o||[])).next())}))},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const fs_1=__importDefault(require("fs")),node_1=__importDefault(require("@lark-opdev/i18n/libs/node")),Error_1=__importStar(require("../../common/Error")),Module_1=__importDefault(require("../../common/Module")),common_error_1=require("../../common/common-error"),compile_error_1=require("../../common/compile-error"),request_error_1=require("../../common/request-error"),unknown_error_1=require("../../common/unknown-error"),api_1=require("../../config/api"),common_1=require("../../config/common"),protocol_1=require("../../protocol"),upload_1=require("../../protocol/upload"),commonData_1=require("../../types/commonData"),upload_2=require("../../types/upload"),functional_1=require("../../utils/functional"),timer_1=__importDefault(require("../../utils/timer")),utils_1=require("../../utils/utils"),eventTrackDef_1=require("../eventTracker/eventTrackDef"),Block_1=__importDefault(require("../upload/help/Block")),Upload_1=__importDefault(require("../upload/help/Upload"));class UploadModule extends Module_1.default{constructor(){super(protocol_1.ModuleName.upload)}getPCMode(e,o){var t,r;return __awaiter(this,void 0,void 0,(function*(){if(o===upload_2.GadgetPlatform.PC){const o=yield(0,utils_1.readFileContent)(e,"app.json");if(null===(r=null===(t=null==o?void 0:o.ext)||void 0===t?void 0:t.defaultPages)||void 0===r?void 0:r.PCMode)return!0}return!1}))}emitProgress(e){this.onProgress(e),this.emit(upload_1.EventEnum.progress,e)}getGadgetFormData(e){var o;const t={};return Upload_1.default.isPCPlatform(e.platform)&&(t.pc_seperate="true",t.pc_mode=null===(o=e.isPCMode)||void 0===o?void 0:o.toString()),t.version=e.version,t.intro=e.description,t.source=fs_1.default.createReadStream(e.packagePath),t.miniMode=e.miniMode,t}getGadgetPluginFormData(e){const o={};return o.version=e.version,o.intro=e.description,o.source=fs_1.default.createReadStream(e.packagePath),o}getBlockFormData(e){return{extension_id:e.blockTypeId,extension_sub_type:e.extensionSubType,version:e.version,intro:e.description,source:fs_1.default.createReadStream(e.packagePath)}}getGadgetNavFormData(e){const o=this.getGadgetFormData(Object.assign(Object.assign({},e),{isPCMode:!1}));return o.compile_type="h5",o}getGadgetLatestVersion(e){var o,t,r,a,s,i;return __awaiter(this,void 0,void 0,(function*(){const d=this.log.bind(this,"info","getGadgetLatestVersion");d("receiveParams","end",{appId:e});const n=yield this.execute(protocol_1.ModuleName.service,protocol_1.ServiceCmdEnum.Request,api_1.API.gadgetLatestVersion,{appId:e},{responseCode:!0,logId:!0});if(0!==n.code){const e=n.message||(null===(t=null===(o=n.error)||void 0===o?void 0:o.localizedMessage)||void 0===t?void 0:t.message)||(null===(r=n.error)||void 0===r?void 0:r.msg)||n.msg;throw new request_error_1.RequestError(e,n.code,n.logId,n.stable)}return d("gadgetLatestVersion","end",{response:n.data||n}),{[upload_2.GadgetPlatform.Mobile]:null===(a=n.data.latest_version)||void 0===a?void 0:a.version,[upload_2.GadgetPlatform.PC]:null===(s=n.data.latest_pc_version)||void 0===s?void 0:s.version,"mobile-nav":null===(i=n.data.latest_navigate_version)||void 0===i?void 0:i.version}}))}getGadgetPluginLatestVersion(e){var o,t,r;return __awaiter(this,void 0,void 0,(function*(){const a=yield this.execute(protocol_1.ModuleName.service,protocol_1.ServiceCmdEnum.Request,api_1.API.gadgetPluginLatestVersion,{appId:e},{responseCode:!0,logId:!0});if(0!==a.code){const e=a.message||(null===(t=null===(o=a.error)||void 0===o?void 0:o.localizedMessage)||void 0===t?void 0:t.message)||(null===(r=a.error)||void 0===r?void 0:r.msg)||a.msg;throw new request_error_1.RequestError(e,a.code,a.logId,a.stable)}return{latestVersion:a.data.latest_version||""}}))}getBlockLatestVersion(e,o){var t,r,a;return __awaiter(this,void 0,void 0,(function*(){const s=this.log.bind(this,"info","getBlockLatestVersion");s("receiveParams","end",{appId:e,blockTypeId:o});const i=yield this.execute(protocol_1.ModuleName.service,protocol_1.ServiceCmdEnum.Request,api_1.API.blockLatestVersion,{appId:e,extension_id:o},{responseCode:!0,logId:!0});if(0!==i.code&&1000040129!==i.code){const e=i.message||(null===(r=null===(t=i.error)||void 0===t?void 0:t.localizedMessage)||void 0===r?void 0:r.message)||(null===(a=i.error)||void 0===a?void 0:a.msg)||i.msg;throw new request_error_1.RequestError(e,i.code,i.logId,i.stable)}return s("blockLatestVersion","end",{response:i}),{libVersion:i.data.basic_lib_version||"",latestVersion:i.data.latest_version||""}}))}getInputVersion(e,o){const t=this.log.bind(this,"info","getInputVersion");if(o){if(Object.values(upload_2.VersionIncrement).some(e=>e===o)){const t=Upload_1.default.versionIncrement(e,o);return Promise.resolve(t)}if(!Upload_1.default.versionRule.test(o))throw new Error_1.default({code:Error_1.CoreErrorCode.PARAM_ERROR,message:node_1.default.t("PARAM_ERROR_VERSION_INCORRECT")});if(e&&-1!==(0,functional_1.versionCompare)(e,o))throw new Error_1.default({code:Error_1.CoreErrorCode.PARAM_ERROR,message:node_1.default.t("PARAM_ERROR_VERSION_TOO_LOW",{latestVersion:e})});return t("resolveVersion","end",{defaultVersion:o}),Promise.resolve(o)}return this.execute(protocol_1.ModuleName.ui,protocol_1.UICmdEnum.input,{label:"Please enter version",placeholder:e?"Current version is "+e:"such as 1.0.0",checker:o=>Upload_1.default.versionRule.test(o)?!e||-1===(0,functional_1.versionCompare)(e,o)||node_1.default.t("PARAM_ERROR_VERSION_TOO_LOW",{latestVersion:e}):node_1.default.t("PARAM_ERROR_VERSION_INCORRECT")})}getInputDescription(e){return e?Promise.resolve(e):this.execute(protocol_1.ModuleName.ui,protocol_1.UICmdEnum.input,{label:"Please enter description",placeholder:"Optional"})}getPlatformUrl(e,o,t){const{environment:r}=this.execute(protocol_1.ModuleName.service,protocol_1.ServiceCmdEnum.GetEnvironment),a=(0,common_1.enableNewOpenPlatform)();let s=`${(0,api_1.getBaseURL)(r,a?"platformNew":"platform",api_1.SubDomain.open)}/${e}/`;if(o===commonData_1.AppTypeEnum.Gadget||o===commonData_1.AppTypeEnum.GadgetNav)s+="mina";else if(o===commonData_1.AppTypeEnum.Block)s+="blocks/"+(t||"");else{if(o!==commonData_1.AppTypeEnum.GadgetPlugin)return"";s+="plugin"}return s}updateLastUploadTime(e,o,t){const r=this.log.bind(this,"info","updateLastUploadTime");switch(r("receiveParams","end",{compilePath:e,version:o,appType:t}),t){case commonData_1.AppTypeEnum.Gadget:case commonData_1.AppTypeEnum.GadgetPlugin:this.execute(protocol_1.ModuleName.storage,protocol_1.StorageCmdEnum.Set,e,"gadget","simulatorConfig",Object.assign(Object.assign({},this.execute(protocol_1.ModuleName.storage,protocol_1.StorageCmdEnum.Get,e,"gadget","simulatorConfig")),{lastUpload:{time:Date.now(),version:o}}));break;default:throw new Error(`update time of ${t} current not supported`)}r("upload","end")}[upload_1.CmdEnum.gadgetLatestVersion](e){return __awaiter(this,void 0,void 0,(function*(){const o=this.log.bind(this,"info",upload_1.CmdEnum.gadgetLatestVersion);o("receiveParams","end",{options:e});try{const{appId:t}=yield Upload_1.default.prepareCheck(e.compilePath,"",this.execute),r=yield this.getGadgetLatestVersion(t);return o("getLastVersion","end"),r}catch(e){throw o("getLastVersion","end",{error:e}),e}}))}[upload_1.CmdEnum.gadgetPluginLatestVersion](e){return __awaiter(this,void 0,void 0,(function*(){const o=this.log.bind(this,"info",upload_1.CmdEnum.gadgetPluginLatestVersion);o("receiveParams","end",{options:e});try{const{appId:t}=yield Upload_1.default.prepareCheck(e.compilePath,"",this.execute),r=yield this.getGadgetPluginLatestVersion(t);return o("getLastVersion","end"),r}catch(e){throw o("getLastVersion","end",{error:e}),e}}))}[upload_1.CmdEnum.blockLatestVersion](e){return __awaiter(this,void 0,void 0,(function*(){const o=this.log.bind(this,"info",upload_1.CmdEnum.blockLatestVersion);o("receiveParams","end",{options:e});try{const{appId:t}=yield Upload_1.default.prepareCheck(e.compilePath,"",this.execute),r=yield this.getBlockLatestVersion(t,e.blockTypeId);return o("getBlockLatestVersion","end"),r}catch(e){throw o("getBlockLatestVersion","end",{error:e}),e}}))}[upload_1.CmdEnum.uploadGadget](e){return __awaiter(this,void 0,void 0,(function*(){const o=this.log.bind(this,"info",upload_1.CmdEnum.uploadGadget),t={platform:e.platform,version:e.version};o("upload","start",e);try{timer_1.default.start("gadget_upload_total");const{appId:r,compilePath:a}=yield Upload_1.default.prepareCheck(e.compilePath,"",this.execute);o("check","end",r,a);const s=yield Upload_1.default.choosePlatform(e.platform,this.execute),i=Upload_1.default.isPCPlatform(s);o("choosePlatform","end",s);const d=yield this.getGadgetLatestVersion(r),n=yield this.getInputVersion(d[s],e.version),l=yield this.getInputDescription(e.description);o("versionInfo","end",n,l),this.emitProgress({step:"Compressing"}),timer_1.default.start("gadget_upload_compress");const[c,p]=yield Promise.all([Upload_1.default.compress({version:n,platform:s,compilePath:a,appId:r,appType:"gadget",useNPM:e.useNPM},this.execute).then(e=>(this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrack,"gadget_upload_compress",Object.assign(Object.assign({},timer_1.default.end("gadget_upload_compress")),t)),e),e=>{throw this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrack,"gadget_upload_compress",Object.assign(Object.assign(Object.assign({},timer_1.default.end("gadget_upload_compress")),{error:e}),t)),new common_error_1.CommonError(Error_1.CoreErrorCode.CORE_MODULE_ERROR,2300000002,e.message,e.code,e.stack)}),this.getPCMode(a,s)]);e.traceId&&this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrackV2,eventTrackDef_1.EventTrack.upload,{},e.traceId,"upload_compress");const u={platform:s,packagePath:c,version:n,description:l,isPCMode:p,miniMode:Upload_1.default.getMobileGadgetMode(a)};try{this.emitProgress({step:"Uploading"}),o("upload","start",u),timer_1.default.start("gadget_upload_emit");const a=yield Upload_1.default.upload(i?"uploadPCGadget":"uploadMobileGadget",r,this.getGadgetFormData(u),{traceId:e.traceId},this.execute);Upload_1.default.checkUploadResponds(a),this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrack,"gadget_upload_emit",Object.assign(Object.assign({},timer_1.default.end("gadget_upload_emit")),t)),e.traceId&&this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrackV2,eventTrackDef_1.EventTrack.upload,{},e.traceId,"upload_emit")}catch(e){throw o("upload","end",{error:e}),this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrack,"gadget_upload_emit",Object.assign(Object.assign(Object.assign({},timer_1.default.end("gadget_upload_emit")),{error:e}),t)),(0,request_error_1.isRequestError)(e)?e:new common_error_1.CommonError(Error_1.CoreErrorCode.CORE_MODULE_ERROR,2200000001,e.message,e.code)}try{timer_1.default.start("gadget_upload_wait"),o("checkCompileProgress","start"),this.emitProgress({step:"Uploading",progress:0,version:n,identifier:"gadget-upload"}),yield Upload_1.default.checkCompileProgress(r,"gadgetCompileProgress",this.execute,"gadget",s,e.traceId),this.emitProgress({step:"Upload succeed",done:!0,status:"success",identifier:"gadget-upload"}),this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrack,"gadget_upload_wait",Object.assign(Object.assign({},timer_1.default.end("gadget_upload_wait")),t)),e.traceId&&this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrackV2,eventTrackDef_1.EventTrack.upload,{},e.traceId,"upload_compiled")}catch(e){throw o("checkCompileProgress","end",{error:e}),this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrack,"gadget_upload_wait",Object.assign(Object.assign(Object.assign({},timer_1.default.end("gadget_upload_wait")),t),{error:e})),e}const m=this.showPlatformUrl(r,commonData_1.AppTypeEnum.Gadget);return this.updateLastUploadTime(a,n,commonData_1.AppTypeEnum.Gadget),o("upload","end"),this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrack,"gadget_upload_total",Object.assign(Object.assign({},timer_1.default.end("gadget_upload_total")),t)),{url:m}}catch(e){throw this.emitProgress({step:"Upload failed",done:!0,status:"fail",identifier:"gadget-upload"}),o("upload","end",{error:e}),this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrack,"gadget_upload_total",Object.assign(Object.assign(Object.assign({},timer_1.default.end("gadget_upload_total")),t),{error:e})),(0,request_error_1.isRequestError)(e)||(0,compile_error_1.isCompileError)(e)||(0,common_error_1.isCommonError)(e)?e:new unknown_error_1.UnknownError(e.message,e.stack)}}))}[upload_1.CmdEnum.uploadResume](e){return __awaiter(this,void 0,void 0,(function*(){const o=this.log.bind(this,"info",upload_1.CmdEnum.uploadResume);try{this.emitProgress({step:"Uploading",progress:0,identifier:e.identifier}),yield Upload_1.default.checkCompileProgress(e.appId,this.getCompileApiName(e.appType),this.execute,e.appType,e.platform),this.emitProgress({step:"Upload succeed",done:!0,status:"success",identifier:e.identifier})}catch(t){throw o("checkCompileProgress","end",{error:t}),this.emitProgress({step:"Upload failed",done:!0,status:"fail",identifier:e.identifier}),t}const t=this.showPlatformUrl(e.appId,this.getAppTypeEnum(e.appType),e.blockTypeId);return o("upload","end"),{url:t}}))}[upload_1.CmdEnum.uploadGadgetPlugin](e){return __awaiter(this,void 0,void 0,(function*(){const o=this.log.bind(this,"info",upload_1.CmdEnum.uploadGadget);this.execute(protocol_1.ModuleName.service,protocol_1.ServiceCmdEnum.Init),o("upload","start",e);try{const{appId:t,compilePath:r}=yield Upload_1.default.prepareCheck(e.compilePath,"",this.execute);o("check","success",t,r);const{latestVersion:a}=yield this.getGadgetPluginLatestVersion(t),s=yield this.getInputVersion(a,e.version),i=yield this.getInputDescription(e.description),d="";o("versionInfo","success",s,i),this.emitProgress({step:"Compressing"});const n={packagePath:yield Upload_1.default.compress({version:s,platform:d,compilePath:r,compileType:"plugin",appId:t,appType:"gadget",maxPkgSize:upload_2.MAX_PLUGIN_PACKAGE_SIZE},this.execute),version:s,description:i};this.emitProgress({step:"Uploading"}),o("upload","start",n);const l=yield Upload_1.default.upload("uploadGadgetPlugin",t,this.getGadgetPluginFormData(n),{traceId:e.traceId},this.execute);Upload_1.default.checkUploadResponds(l),yield Upload_1.default.checkCompileProgress(t,"gadgetPluginCompileProgress",this.execute,"gadget_plugin",d,e.traceId),this.emitProgress({step:"Upload succeed",done:!0,status:"success"});const c=this.showPlatformUrl(t,commonData_1.AppTypeEnum.GadgetPlugin);return this.updateLastUploadTime(r,s,commonData_1.AppTypeEnum.GadgetPlugin),o("upload","success"),{url:c}}catch(e){throw this.emitProgress({step:"Upload failed",done:!0,status:"fail"}),this.log("error",upload_1.CmdEnum.uploadGadgetPlugin,"common","fail",e),(0,request_error_1.isRequestError)(e)||(0,compile_error_1.isCompileError)(e)||(0,common_error_1.isCommonError)(e)?e:new unknown_error_1.UnknownError(e.message,e.stack)}}))}[upload_1.CmdEnum.uploadGadgetNav](e){return __awaiter(this,void 0,void 0,(function*(){const o=this.log.bind(this,"info",upload_1.CmdEnum.uploadGadgetNav);o("upload","start",e);try{const{appId:t,compilePath:r}=yield Upload_1.default.prepareCheck(e.compilePath,"",this.execute);o("check","end",t,r);const a=yield this.getGadgetLatestVersion(t),s=yield this.getInputVersion(a["mobile-nav"],e.version),i=e.platform;o("choosePlatform","end",i);const d=yield this.getInputDescription(e.description);this.emitProgress({step:"Compressing"});const n=yield Upload_1.default.compress({version:s,platform:i,compilePath:r,appId:t,appType:"gadget"});e.traceId&&this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrackV2,eventTrackDef_1.EventTrack.upload,{},e.traceId,"upload_compress");const l={platform:i,packagePath:n,version:s,description:d,miniMode:Upload_1.default.getMobileGadgetMode(r)};this.emitProgress({step:"Uploading"}),o("upload","start",l);const c=yield Upload_1.default.upload("uploadMobileGadget",t,this.getGadgetNavFormData(l),{traceId:e.traceId},this.execute);Upload_1.default.checkUploadResponds(c),e.traceId&&this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrackV2,eventTrackDef_1.EventTrack.upload,{},e.traceId,"upload_emit"),this.emitProgress({step:"Uploading",progress:0,version:s,identifier:"gadget-upload"}),yield Upload_1.default.checkCompileProgress(t,"gadgetCompileProgress",this.execute,"gadget",i,e.traceId),e.traceId&&this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrackV2,eventTrackDef_1.EventTrack.upload,{},e.traceId,"upload_compiled"),this.emitProgress({step:"Upload succeed",done:!0,status:"success",identifier:"gadget-upload"});const p=this.showPlatformUrl(t,commonData_1.AppTypeEnum.GadgetNav);return o("upload","end",p),{url:p}}catch(e){throw this.emitProgress({step:"Upload failed",done:!0,status:"fail",identifier:"gadget-upload"}),o("upload","end",{error:e}),(0,request_error_1.isRequestError)(e)||(0,compile_error_1.isCompileError)(e)||(0,common_error_1.isCommonError)(e)?e:new unknown_error_1.UnknownError(e.message,e.stack)}}))}[upload_1.CmdEnum.uploadBlock](e){return __awaiter(this,void 0,void 0,(function*(){const o=this.log.bind(this,"info",upload_1.CmdEnum.uploadBlock);o("upload","start",e);const t={appId:"",blockTypeId:e.blockTypeId,version:e.version};try{const{appId:r,compilePath:a}=yield Upload_1.default.prepareCheck(e.compilePath,"",this.execute);t.appId=r,timer_1.default.start("block_upload_total"),o("check","end",r,a);const s=new Block_1.default({projectPath:a,execute:this.execute});let i=e.blockTypeId;if(i||(i=yield s.choose()),!i.startsWith("blk_"))throw new Error_1.default({code:Error_1.CoreErrorCode.PARAM_ERROR,message:node_1.default.t("BLOCK_TYPE_ID_ERROR"),advise:node_1.default.t("BLOCK_TYPE_ID_ERROR_ADVISE")});const{latestVersion:d}=yield this.getBlockLatestVersion(r,i),n=yield s.readBlockConfig(i),l=s.getRelativePath(n),c=s.rewriteProjectConfig(n);o("chooseBlock","end",i);const p=yield this.getInputVersion(d,e.version),u=yield this.getInputDescription(e.description);let m;o("versionInfo","end",p,u),this.emitProgress({step:"Compressing"}),timer_1.default.start("block_upload_compress");try{m=yield Upload_1.default.compress({version:p,platform:upload_2.GadgetPlatform.PC,compilePath:a,appId:r,globs:[s.projectConfigFileName,l?l+"/**/*":"**/*"],appType:"block"}),this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrack,"block_upload_compress",Object.assign(Object.assign({},timer_1.default.end("block_upload_compress")),t))}catch(e){throw o("versionInfo","end",p,u),this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrack,"block_upload_compress",Object.assign(Object.assign(Object.assign({},timer_1.default.end("block_upload_compress")),t),{error:e})),new common_error_1.CommonError(Error_1.CoreErrorCode.CORE_MODULE_ERROR,2300000002,e.message,e.code,e.stack)}e.traceId&&this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrackV2,eventTrackDef_1.EventTrack.upload,{},e.traceId,"upload_compress");const _={packagePath:m,version:p,description:u,blockTypeId:i,extensionSubType:e.extensionSubType||("offlineWeb"===(null==n?void 0:n.blockRenderType)?"block_h5":"block_dsl")};c(),this.emitProgress({step:"Uploading"}),o("upload","start",_);try{timer_1.default.start("block_upload_emit");const a=yield Upload_1.default.upload("uploadBlock",r,this.getBlockFormData(_),{traceId:e.traceId},this.execute);Upload_1.default.checkUploadResponds(a),this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrack,"block_upload_emit",Object.assign(Object.assign({},timer_1.default.end("block_upload_emit")),t)),e.traceId&&this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrackV2,eventTrackDef_1.EventTrack.upload,{},e.traceId,"upload_emit"),o("uploadBlock","end")}catch(e){throw o("uploadBlock","end",{error:e}),this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrack,"block_upload_emit",Object.assign(Object.assign(Object.assign({},timer_1.default.end("block_upload_emit")),t),{error:e})),(0,request_error_1.isRequestError)(e)?e:new common_error_1.CommonError(Error_1.CoreErrorCode.USER_ERROR,2200000001,e.message,e.stack)}o("checkCompileProgress","start"),this.emitProgress({step:"Uploading",progress:0,version:p,identifier:"block-upload"}),yield Upload_1.default.checkCompileProgress(r,"blockCompileProgress",this.execute,"block","",e.traceId),o("checkCompileProgress","end"),this.emitProgress({step:"Upload succeed",done:!0,status:"success",identifier:"block-upload"});const g=this.showPlatformUrl(r,commonData_1.AppTypeEnum.Block,i);return o("upload","end"),this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrack,"block_upload_total",Object.assign(Object.assign({},timer_1.default.end("block_upload_total")),t)),e.traceId&&this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrackV2,eventTrackDef_1.EventTrack.upload,{},e.traceId,"upload_compiled"),{url:g}}catch(e){throw this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrack,"block_upload_total",Object.assign(Object.assign(Object.assign({},timer_1.default.end("block_upload_total")),t),{error:e})),this.emitProgress({step:"Upload failed",done:!0,status:"fail",identifier:"block-upload"}),o("upload","end",{error:e}),(0,request_error_1.isRequestError)(e)||(0,compile_error_1.isCompileError)(e)||(0,common_error_1.isCommonError)(e)?e:new unknown_error_1.UnknownError(e.message,e.stack)}}))}[upload_1.CmdEnum.getH5OfflineMeta](e){return __awaiter(this,void 0,void 0,(function*(){const o=yield this.execute(protocol_1.ModuleName.service,protocol_1.ServiceCmdEnum.Request,api_1.API.offlineH5GetMeta,e);return{pkg_id:o.pkg_id,latest_version:o.latest_version,desc:o.desc}}))}[upload_1.CmdEnum.uploadH5Offline](e){return __awaiter(this,void 0,void 0,(function*(){try{Upload_1.default.checkLogin(this.execute);const o=yield Upload_1.default.compress({version:e.version,platform:upload_2.GadgetPlatform.Mobile,appId:e.appId,compilePath:e.projectPath,maxPkgSize:upload_2.MAX_H5_OFFLINE_PACKAGE_SIZE});e.traceId&&this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrackV2,eventTrackDef_1.EventTrack.upload,{},e.traceId,"upload_compress");const t={appId:e.appId,version:e.version,desc:e.desc,source:fs_1.default.createReadStream(o)};this.emitProgress({step:"Uploading"});const r=yield this.execute(protocol_1.ModuleName.service,protocol_1.ServiceCmdEnum.Request,api_1.API.offlineH5Upload,t,{headers:{"content-type":"multipart/form-data"},traceId:e.traceId,responseCode:!0});return Upload_1.default.checkUploadResponds(r),e.traceId&&this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrackV2,eventTrackDef_1.EventTrack.upload,{},e.traceId,"upload_emit"),yield Upload_1.default.checkCompileProgress(e.appId,"gadgetCompileProgress",this.execute,"h5_offline","",e.traceId),this.emitProgress({step:"Upload succeed",done:!0,status:"success"}),e.traceId&&this.execute(protocol_1.ModuleName.eventTracker,protocol_1.EventTrackerCmdEnum.PerformanceTrackV2,eventTrackDef_1.EventTrack.upload,{},e.traceId,"upload_compiled"),{data:r.data}}catch(e){throw(0,request_error_1.isRequestError)(e)||(0,compile_error_1.isCompileError)(e)||(0,common_error_1.isCommonError)(e)?e:new unknown_error_1.UnknownError(e.message,e.stack)}}))}getCompileApiName(e){switch(e){case"gadget":return"gadgetCompileProgress";case"block":return"blockCompileProgress";default:throw Error("unknown error")}}getAppTypeEnum(e){switch(e){case"gadget":return commonData_1.AppTypeEnum.Gadget;case"block":return commonData_1.AppTypeEnum.Block;default:throw Error("unknown type")}}}exports.default=UploadModule;