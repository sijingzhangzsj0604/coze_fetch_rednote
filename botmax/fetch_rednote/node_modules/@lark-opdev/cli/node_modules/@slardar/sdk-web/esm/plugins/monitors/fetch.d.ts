import { WithSubject, WithContext } from '@slardar/sdk-template';
import { FetchMonitorConfig } from '../../monitors/http/type';
import { WebClient, WebVolClient } from '../../types';
export declare const FETCH_MONITOR_PLUGIN_NAME = "fetch";
export interface WrapFetch {
    (fetch: typeof window.fetch): typeof window.fetch;
}
export declare type WithWrapFetch<C extends WebClient> = C & {
    wrapFetch?: WrapFetch;
};
export interface FetchMonitorPluginConfig {
    [FETCH_MONITOR_PLUGIN_NAME]?: Partial<FetchMonitorConfig> | boolean;
}
export declare function FetchMonitorPlugin<C extends WithContext<WithSubject<WebClient>>>(client: C): void;
export declare function FetchMonitorVolPlugin<C extends WithSubject<WebVolClient>>(client: C): void;
