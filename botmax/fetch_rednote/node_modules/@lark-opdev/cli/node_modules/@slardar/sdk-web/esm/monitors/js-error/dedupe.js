import { reportSelfError } from '../../utils';
var isSameErrorString = function (current, previous) {
    return current && previous && current === previous;
};
var shouldDropEvent = function (currentError, previousError) {
    if (!currentError || !previousError) {
        return false;
    }
    if (isSameErrorString(currentError.message, previousError.message) &&
        isSameErrorString(currentError.stack, previousError.stack)) {
        return true;
    }
    return false;
};
export var dedupe = function () {
    var __previousError;
    return function (currentError) {
        // just in case something goes wrong
        try {
            if (shouldDropEvent(currentError, __previousError)) {
                __previousError = currentError;
                return undefined;
            }
        }
        catch (e) {
            reportSelfError(e);
        }
        __previousError = currentError;
        return currentError;
    };
};
//# sourceMappingURL=dedupe.js.map