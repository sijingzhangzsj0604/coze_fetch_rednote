import { APIItem } from '../config/api';
import { CmdFun, ModuleCmdMap, ModuleDesc, ModuleEventMap, ModuleName } from '../types/protocol';
import { ProxyConfig } from '../types/service';
export declare enum EventEnum {
    Updated = "Account.Updated"
}
export interface EventMap extends ModuleEventMap<EventEnum> {
    [EventEnum.Updated]: {
        type: '';
        params: {};
    };
}
export declare enum CmdEnum {
    Init = "Service.init",
    Update = "Service.update",
    GetEnvironment = "Service.GetEnvironment",
    Request = "Service.request",
    SetProxy = "Service.SetProxy",
    SetCustomHeaders = "Service.setCustomHeaders",
    GetV5URLList = "Service.GetV5URLList",
    SetV5URLList = "Service.SetV5URLList"
}
export declare type CmdInit = (m: ModuleName.service, cmd: CmdEnum.Init) => void;
export declare type CmdUpdate = (m: ModuleName.service, cmd: CmdEnum.Update, config: {
    environment?: string;
    larkSession?: string;
    larkSessionList?: string[];
    type?: 'ide' | 'debug';
}) => void;
export declare type CmdGetEnvironment = (m: ModuleName.service, cmd: CmdEnum.GetEnvironment) => {
    environment: string;
};
export declare type CmdRequest = (m: ModuleName.service, cmd: CmdEnum.Request, api: APIItem, params?: any, options?: {
    responseHeader?: boolean;
    responseCode?: boolean;
    headers?: {};
    traceId?: string;
    logId?: boolean;
    timeout?: number;
    retries?: number;
}) => Promise<any>;
export declare type CmdSetProxy = (m: ModuleName.service, cmd: CmdEnum.SetProxy, proxyConfig: ProxyConfig) => void;
export declare type CmdSetCustomHeaders = (m: ModuleName.service, cmd: CmdEnum.SetCustomHeaders, customHeaders: Record<string, string>) => void;
export declare type CmdGetV5URLList = (m: ModuleName.service, cmd: CmdEnum.GetV5URLList) => {
    v5URLList: string[];
};
export declare type Command = CmdInit & CmdUpdate & CmdGetEnvironment & CmdRequest & CmdSetProxy & CmdSetCustomHeaders & CmdGetV5URLList;
export interface CmdMap extends ModuleCmdMap<CmdEnum> {
    [CmdEnum.Init]: CmdFun<CmdInit>;
    [CmdEnum.Update]: CmdFun<CmdUpdate>;
    [CmdEnum.GetEnvironment]: CmdFun<CmdGetEnvironment>;
    [CmdEnum.Request]: CmdFun<CmdRequest>;
    [CmdEnum.SetProxy]: CmdFun<CmdSetProxy>;
    [CmdEnum.SetCustomHeaders]: CmdFun<CmdSetCustomHeaders>;
    [CmdEnum.GetV5URLList]: CmdFun<CmdGetV5URLList>;
}
export declare const ServiceDesc: ModuleDesc<EventMap, CmdMap, ModuleName>;
