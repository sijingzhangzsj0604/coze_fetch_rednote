import { I18n, Intl } from '@ies/starling_intl';
export declare type I18nT = typeof I18n.t;
export declare type Lang = 'en-US' | 'zh-CN';
export declare type ReplaceMap = Map<string | RegExp, string>;
export interface II18n<T extends {
    t: (...args: any[]) => string;
}> {
    getLang: () => Lang;
    setLang: (lang: Lang) => Promise<Lang>;
    setReplaceMap: (replaceMap: ReplaceMap) => void;
    t: T['t'];
}
declare module '@ies/starling_intl' {
    interface Intl {
        setLangWithPromise(targetLocale: Lang): Promise<unknown>;
    }
}
export declare class I18nBase implements II18n<Intl> {
    private origin;
    private replaceMap;
    constructor(origin: Intl, replaceMap?: ReplaceMap);
    getLang(): Lang;
    setLang(lang: Lang): Promise<"en-US" | "zh-CN">;
    setReplaceMap(newReplaceMap: Map<string | RegExp, string>): void;
    private doReplace;
    t(...args: Parameters<I18nT>): string;
}
