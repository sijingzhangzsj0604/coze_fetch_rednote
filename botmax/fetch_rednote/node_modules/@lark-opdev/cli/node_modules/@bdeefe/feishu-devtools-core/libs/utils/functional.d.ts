export declare function promiseRunner<P extends any[], R>(fn: (...p: P) => Promise<R>, shouldUpdate?: (now: P, old: P | void) => boolean): (...p: P) => Promise<R>;
export declare function versionCompare(left: string, right: string): -1 | 0 | 1;
export declare function debounce<T extends (...args: any[]) => R, R>(cb: T, timeout: number): ((...args: Parameters<T>) => R | undefined) & {
    cancel: () => void;
    flush: () => void;
};
