import { Observer, NextLink, ParametersForFn } from '@slardar/sdk-template';
export declare const XHR_SUBJECT_NAME = "xhr_0";
export declare type XHRNext = ([_method, _url, _start, xhr]: [
    _method: string,
    _url: string,
    _start: number,
    xhr: NewXMLHttpRequest
]) => (xhr: NewXMLHttpRequest) => void;
export interface NewXMLHttpRequest extends XMLHttpRequest {
    _url: string;
    _method: string;
    _start: number;
    _data: Parameters<XMLHttpRequest['send']>[0];
    _reqHeaders?: Record<string, string>;
}
export declare const applyXHR: (xhr?: XMLHttpRequest | undefined) => Observer<XHRNext>;
export declare const FETCH_SUBJECT_NAME = "fetch_0";
export declare type FetchNext = ([req, options]: [req: Request | string, options: RequestInit]) => (res?: Response) => void;
export declare const hookFetch: (_fetch: typeof window.fetch, next: (args: [req: string | Request, options: RequestInit]) => ReturnType<NextLink<FetchNext>>) => typeof window.fetch;
export declare const observeFetch: Observer<FetchNext>;
export declare const fetchSubject: [string, Observer<FetchNext>];
