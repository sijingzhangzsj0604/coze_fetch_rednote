import { SafeObservable } from '@slardar/sdk-template';
import { HiddenNext, UnloadNext, PVNext } from '../../collector';
import { WebReportEvent } from '../../types';
import { MetricEnum } from '../performance/type';
import { PerfMetricGetterWithHiddenContext } from './type';
export declare const FCP_ENTRY_NAME = "first-contentful-paint";
export declare const FP_ENTRY_NAME = "first-paint";
export declare const FP_METRIC_NAME = MetricEnum.fp;
export declare const FCP_METRIC_NAME = MetricEnum.fcp;
export declare const getPaint: (entryName: string, metricName: string, report: (ev: WebReportEvent) => void, tearDownGroup: (() => void)[], [hiddenObserver, unloadObserver]: [SafeObservable<HiddenNext>, SafeObservable<UnloadNext>, SafeObservable<PVNext>]) => void;
export declare const FP: [MetricEnum, PerfMetricGetterWithHiddenContext];
export declare const FCP: [MetricEnum, PerfMetricGetterWithHiddenContext];
