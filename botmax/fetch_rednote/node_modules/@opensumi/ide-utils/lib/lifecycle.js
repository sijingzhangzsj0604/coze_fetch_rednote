"use strict";
/* ---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImmortalReference = exports.ReferenceCollection = void 0;
const functional_1 = require("./functional");
class ReferenceCollection {
    constructor() {
        this.references = Object.create(null);
    }
    acquire(key) {
        let reference = this.references[key];
        if (!reference) {
            reference = this.references[key] = { counter: 0, object: this.createReferencedObject(key) };
        }
        const { object } = reference;
        const dispose = (0, functional_1.once)(() => {
            if (--reference.counter === 0) {
                this.destroyReferencedObject(key, reference.object);
                delete this.references[key];
            }
        });
        reference.counter++;
        return { object, dispose };
    }
}
exports.ReferenceCollection = ReferenceCollection;
class ImmortalReference {
    constructor(object) {
        this.object = object;
    }
    dispose() {
        /* noop */
    }
}
exports.ImmortalReference = ImmortalReference;
//# sourceMappingURL=lifecycle.js.map