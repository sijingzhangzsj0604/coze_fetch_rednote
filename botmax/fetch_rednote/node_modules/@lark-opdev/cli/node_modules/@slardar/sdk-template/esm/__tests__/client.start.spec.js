import test from 'ava';
import sinon from 'sinon';
import { createClient } from '../client';
import { id, createBaseConfigManager, noopBuilder, noopSender } from '../utils';
test('client.start - trigger callback, in order', function (t) {
    var client = createClient({
        builder: noopBuilder,
        createSender: function () { return noopSender; },
        createDefaultConfig: function () { return ({}); },
        validateInitConfig: function () { return true; },
        initConfigNormalizer: id,
        userConfigNormalizer: id,
        createConfigManager: createBaseConfigManager,
    });
    var afterInit = sinon.fake();
    client.on('init', afterInit);
    t.assert(afterInit.notCalled);
    var afterStart = sinon.fake();
    client.on('start', afterStart);
    t.assert(afterStart.notCalled);
    client.start();
    t.assert(afterStart.notCalled);
    t.is(client.getBuilder(), noopBuilder);
    t.is(client.getSender(), undefined);
    client.init({});
    t.assert(afterInit.called);
    t.is(client.getSender(), noopSender);
    client.start();
    t.assert(afterStart.called);
    var afterInit2 = sinon.fake();
    client.on('init', afterInit2);
    t.assert(afterInit.called);
    var afterStart2 = sinon.fake();
    client.on('start', afterStart2);
    t.assert(afterStart2.called);
    // no effect
    client.start();
    t.assert(afterStart2.called);
});
//# sourceMappingURL=client.start.spec.js.map