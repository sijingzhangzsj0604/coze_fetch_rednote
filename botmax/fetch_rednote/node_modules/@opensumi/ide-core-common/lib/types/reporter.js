"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IReporter = exports.IReporterService = exports.ReporterMetadata = exports.REPORT_TYPE = exports.REPORT_HOST = exports.REPORT_NAME = void 0;
var REPORT_NAME;
(function (REPORT_NAME) {
    REPORT_NAME["ACTIVE_EXTENSION"] = "activateExtension";
    REPORT_NAME["RUNTIME_ERROR_EXTENSION"] = "runtimeErrorExtension";
    REPORT_NAME["LOAD_EXTENSION_MAIN"] = "loadExtensionMain";
    REPORT_NAME["PROVIDE_COMPLETION_ITEMS"] = "provideCompletionItems";
    REPORT_NAME["RESOLVE_COMPLETION_ITEM"] = "resolveCompletionItem";
    REPORT_NAME["PROVIDE_DOCUMENT_FORMATTING_EDITS"] = "provideDocumentFormattingEdits";
    REPORT_NAME["PROVIDE_DOCUMENT_RANGE_FORMATTING_EDITS"] = "provideDocumentRangeFormattingEdits";
    REPORT_NAME["EDITOR_REACTIVE"] = "editorReactive";
    REPORT_NAME["CHANNEL_RECONNECT"] = "channelReconnect";
    REPORT_NAME["MEASURE"] = "measure";
    REPORT_NAME["FORMAT_ON_SAVE_TIMEOUT_ERROR"] = "formatOnSaveTimeoutError";
    REPORT_NAME["FORMAT_ON_SAVE"] = "formatOnSave";
    REPORT_NAME["NOT_FOUND_COMMAND"] = "notFoundCommand";
    REPORT_NAME["INSTALL_EXTENSION_ERROR"] = "installExtensionError";
    REPORT_NAME["EXTENSION_CRASH"] = "extensionCrash";
    REPORT_NAME["EXTENSION_NOT_EXIST"] = "extensionNotExist";
    REPORT_NAME["THEME_LOAD"] = "themeLoad";
    REPORT_NAME["PROVIDE_HOVER"] = "provideHover";
    REPORT_NAME["PROVIDE_DEFINITION"] = "provideDefinition";
    REPORT_NAME["PROVIDE_TYPE_DEFINITION"] = "provideTypeDefinition";
    REPORT_NAME["PROVIDE_FOLDING_RANGES"] = "provideFoldingRanges";
    REPORT_NAME["PROVIDE_DOCUMENT_COLORS"] = "provideDocumentColors";
    REPORT_NAME["PROVIDE_COLOR_PRESENTATIONS"] = "provideColorPresentations";
    REPORT_NAME["PROVIDE_DOCUMENT_HIGHLIGHTS"] = "provideDocumentHighlights";
    REPORT_NAME["PROVIDE_LINKS"] = "provideLinks";
    REPORT_NAME["PROVIDE_REFERENCES"] = "provideReferences";
    REPORT_NAME["PROVIDE_DOCUMENT_SYMBOLS"] = "provideDocumentSymbols";
    REPORT_NAME["PROVIDE_IMPLEMENTATION"] = "provideImplementation";
    REPORT_NAME["PROVIDE_CODE_ACTIONS"] = "provideCodeActions";
    REPORT_NAME["PROVIDE_RENAME_EDITS"] = "provideRenameEdits";
    REPORT_NAME["PROVIDE_SIGNATURE_HELP"] = "provideSignatureHelp";
    REPORT_NAME["PROVIDE_CODE_LENSES"] = "provideCodeLenses";
    REPORT_NAME["RESOLVE_CODE_LENS"] = "resolveCodeLens";
    REPORT_NAME["PROVIDE_ON_TYPE_FORMATTING_EDITS"] = "provideOnTypeFormattingEdits";
    REPORT_NAME["PROVIDE_SELECTION_RANGES"] = "provideSelectionRanges";
    REPORT_NAME["TERMINAL_MEASURE"] = "terminalMeasure";
    REPORT_NAME["SEARCH_MEASURE"] = "searchMeasure";
    REPORT_NAME["QUICK_OPEN_MEASURE"] = "quickOpenMeasure";
})(REPORT_NAME = exports.REPORT_NAME || (exports.REPORT_NAME = {}));
var REPORT_HOST;
(function (REPORT_HOST) {
    REPORT_HOST["BROWSER"] = "browser";
    REPORT_HOST["NODE"] = "node";
    REPORT_HOST["WORKER"] = "worker";
    REPORT_HOST["EXTENSION"] = "extension";
})(REPORT_HOST = exports.REPORT_HOST || (exports.REPORT_HOST = {}));
var REPORT_TYPE;
(function (REPORT_TYPE) {
    REPORT_TYPE["PERFORMANCE"] = "performance";
    REPORT_TYPE["POINT"] = "point";
})(REPORT_TYPE = exports.REPORT_TYPE || (exports.REPORT_TYPE = {}));
exports.ReporterMetadata = Symbol('ReporterMetadata');
// ide-framework 调用
exports.IReporterService = Symbol('IReporterService');
// 集成方实现
// 前端和后端各有一套实现
exports.IReporter = Symbol('IReporter');
//# sourceMappingURL=reporter.js.map