"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReporterService = exports.DefaultReporter = void 0;
const tslib_1 = require("tslib");
const di_1 = require("@opensumi/di");
const log_1 = require("./log");
const reporter_1 = require("./types/reporter");
class ReporterTimer {
    constructor(name, reporter, metadata) {
        this.name = name;
        this.reporter = reporter;
        this.metadata = metadata;
        this.now = Date.now();
    }
    timeEnd(msg, extra) {
        const duration = Date.now() - this.now;
        this.reporter.performance(this.name, {
            duration,
            metadata: this.metadata,
            msg,
            extra,
        });
        return duration;
    }
}
let DefaultReporter = class DefaultReporter {
    constructor() {
        this.logger = (0, log_1.getDebugLogger)();
    }
    performance(name, data) {
        this.logger.log(name, data);
    }
    point(name, data) {
        this.logger.log(name, data);
    }
};
DefaultReporter = tslib_1.__decorate([
    (0, di_1.Injectable)()
], DefaultReporter);
exports.DefaultReporter = DefaultReporter;
let ReporterService = class ReporterService {
    constructor(reporter, metadata) {
        this.reporter = reporter;
        this.metadata = metadata;
    }
    time(name) {
        return new ReporterTimer(name, this.reporter, this.metadata);
    }
    point(name, msg, extra) {
        this.reporter.point(name, {
            metadata: this.metadata,
            msg,
            extra,
        });
    }
    dispose() { }
};
ReporterService = tslib_1.__decorate([
    (0, di_1.Injectable)(),
    tslib_1.__param(0, (0, di_1.Inject)(reporter_1.IReporter)),
    tslib_1.__param(1, (0, di_1.Inject)(reporter_1.ReporterMetadata)),
    tslib_1.__metadata("design:paramtypes", [Object, Object])
], ReporterService);
exports.ReporterService = ReporterService;
//# sourceMappingURL=reporter.js.map